% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for conjecture
% SZS output start Proof for conjecture
7. isort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),insort(X0,X2,isort(X0,X3))) [input]
8. filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [input]
9. ! [X0 : $tType] : ! [X2 : X0,X1 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X1,insort(X0,X2,X3)) = filter_mset(X0,X1,'Cons'(X0,X2,X3)) [input]
10. ! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : filter_mset(X0,X1,X2) = filter_mset(X0,X1,isort(X0,X2)) [input]
11. ~! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : filter_mset(X0,X1,X2) = filter_mset(X0,X1,isort(X0,X2)) [negated conjecture 10]
18. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : isort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),insort(X0,X2,isort(X0,X3))) [closure 7]
19. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => 'Nil'(X0) = mG0(X0,X3,X2,X1)) [fool $match elimination 18]
20. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => insort(X0,X2,isort(X0,X3)) = mG0(X0,X3,X2,X1)) [fool $match elimination 18]
21. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : isort(X0,X1) = mG0(X0,X3,X2,X1) [fool elimination 18]
28. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [closure 8]
30. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (X1 = X3 => 'Cons'(X0,X3,filter_mset(X0,X1,X4)) = iG4(X0,X3,X1,X4)) [fool $ite elimination 28]
31. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (~X1 = X3 => filter_mset(X0,X1,X4) = iG4(X0,X3,X1,X4)) [fool $ite elimination 28]
32. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG3(X0,X3,X1,X4,X2) = iG4(X0,X3,X1,X4)) [fool $match elimination 28]
33. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = mG3(X0,X3,X1,X4,X2) [fool elimination 28]
34. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X1,X3) = X4 => mG3(X0,X1,X2,X3,X4) = iG4(X0,X1,X2,X3)) [rectify 32]
35. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~X1 = X2 => iG4(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [rectify 31]
36. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 != X2 => iG4(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [flattening 35]
37. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 = X2 => iG4(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3))) [rectify 30]
44. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Cons'(X0,X2,X1) = X3 => insort(X0,X2,isort(X0,X1)) = mG0(X0,X1,X2,X3)) [rectify 20]
45. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => 'Nil'(X0) = mG0(X0,X1,X2,X3)) [rectify 19]
46. ~! [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : filter_mset(X0,X1,X2) = filter_mset(X0,X1,isort(X0,X2)) [flattening 11]
47. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : isort(X3,X2) = mG0(X3,X0,X1,X2) [rectify 21]
49. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_mset(X4,X3,X2) = mG3(X4,X1,X3,X0,X2) [rectify 33]
57. ! [X0 : $tType] : ! [X1 : X0,X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,insort(X0,X1,X3)) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [rectify 9]
58. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,insort(X0,X1,X3)) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [flattening 57]
61. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG3(X0,X1,X2,X3,X4) = iG4(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4) [ennf transformation 34]
62. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG4(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2) [ennf transformation 36]
63. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG4(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2) [ennf transformation 37]
69. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (insort(X0,X2,isort(X0,X1)) = mG0(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3) [ennf transformation 44]
70. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = mG0(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 45]
71. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : filter_mset(X0,X1,X2) != filter_mset(X0,X1,isort(X0,X2)) [ennf transformation 46]
76. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : filter_mset(X0,X1,X2) != filter_mset(X0,X1,isort(X0,X2)) => filter_mset(sK5,sK6,sK7) != filter_mset(sK5,sK6,isort(sK5,sK7)) [choice axiom]
77. filter_mset(sK5,sK6,sK7) != filter_mset(sK5,sK6,isort(sK5,sK7)) [skolemisation 71,76]
78. mG3(X0,X1,X2,X3,X4) = iG4(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4 [cnf transformation 61]
79. iG4(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2 [cnf transformation 62]
80. iG4(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2 [cnf transformation 63]
86. insort(X0,X2,isort(X0,X1)) = mG0(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3 [cnf transformation 69]
87. 'Nil'(X0) = mG0(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 70]
88. filter_mset(sK5,sK6,sK7) != filter_mset(sK5,sK6,isort(sK5,sK7)) [cnf transformation 77]
89. isort(X3,X2) = mG0(X3,X0,X1,X2) [cnf transformation 47]
91. filter_mset(X4,X3,X2) = mG3(X4,X1,X3,X0,X2) [cnf transformation 49]
95. filter_mset(X0,X2,insort(X0,X1,X3)) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [cnf transformation 58]
97. iG4(X0,X1,X2,X3) = filter_mset(X0,X2,X4) | 'Cons'(X0,X1,X3) != X4 [definition unfolding 78,91]
101. isort(X0,X3) = insort(X0,X2,isort(X0,X1)) | 'Cons'(X0,X2,X1) != X3 [definition unfolding 86,89]
102. 'Nil'(X0) = isort(X0,X3) | 'Nil'(X0) != X3 [definition unfolding 87,89]
103. iG4(X0,X1,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [equality resolution 97]
104. iG4(X0,X2,X2,X3) = 'Cons'(X0,X2,filter_mset(X0,X2,X3)) [equality resolution 80]
108. insort(X0,X2,isort(X0,X1)) = isort(X0,'Cons'(X0,X2,X1)) [equality resolution 101]
109. 'Nil'(X0) = isort(X0,'Nil'(X0)) [equality resolution 102]
110. filter_mset(X0,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) | X1 = X2 [forward demodulation 79,103]
162. ! [X2 : sK5,X3 : 'list()'(sK5)] : ((filter_mset(sK5,sK6,X3) = filter_mset(sK5,sK6,isort(sK5,X3)) => filter_mset(sK5,sK6,'Cons'(sK5,X2,X3)) = filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,X2,X3)))) & filter_mset(sK5,sK6,'Nil'(sK5)) = filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5)))) => ! [X6 : 'list()'(sK5)] : filter_mset(sK5,sK6,X6) = filter_mset(sK5,sK6,isort(sK5,X6)) [structural induction hypothesis (recursion)]
163. ! [X6 : 'list()'(sK5)] : filter_mset(sK5,sK6,X6) = filter_mset(sK5,sK6,isort(sK5,X6)) | ? [X2 : sK5,X3 : 'list()'(sK5)] : ((filter_mset(sK5,sK6,'Cons'(sK5,X2,X3)) != filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,X2,X3))) & filter_mset(sK5,sK6,X3) = filter_mset(sK5,sK6,isort(sK5,X3))) | filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5)))) [ennf transformation 162]
164. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5))) | filter_mset(sK5,sK6,sK14) = filter_mset(sK5,sK6,isort(sK5,sK14)) | filter_mset(sK5,sK6,X6) = filter_mset(sK5,sK6,isort(sK5,X6)) [cnf transformation 163]
165. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5))) | filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,sK13,sK14))) | filter_mset(sK5,sK6,X6) = filter_mset(sK5,sK6,isort(sK5,X6)) [cnf transformation 163]
170. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5))) | filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,sK13,sK14))) [induction hyperresolution 88,165]
171. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,isort(sK5,'Nil'(sK5))) | filter_mset(sK5,sK6,sK14) = filter_mset(sK5,sK6,isort(sK5,sK14)) [induction hyperresolution 88,164]
172. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,'Nil'(sK5)) | filter_mset(sK5,sK6,sK14) = filter_mset(sK5,sK6,isort(sK5,sK14)) [forward demodulation 171,109]
173. filter_mset(sK5,sK6,sK14) = filter_mset(sK5,sK6,isort(sK5,sK14)) [trivial inequality removal 172]
174. filter_mset(sK5,sK6,'Nil'(sK5)) != filter_mset(sK5,sK6,'Nil'(sK5)) | filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,sK13,sK14))) [forward demodulation 170,109]
175. filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,isort(sK5,'Cons'(sK5,sK13,sK14))) [trivial inequality removal 174]
176. filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,insort(sK5,sK13,isort(sK5,sK14))) [forward demodulation 175,108]
177. filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) != filter_mset(sK5,sK6,'Cons'(sK5,sK13,isort(sK5,sK14))) [forward demodulation 176,95]
206. 'Cons'(X0,X1,filter_mset(X0,X1,X2)) = filter_mset(X0,X1,'Cons'(X0,X1,X2)) [superposition 104,103]
274. filter_mset(sK5,sK6,isort(sK5,sK14)) != filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) | sK6 = sK13 [superposition 177,110]
287. filter_mset(sK5,sK6,sK14) != filter_mset(sK5,sK6,'Cons'(sK5,sK13,sK14)) | sK6 = sK13 [forward demodulation 274,173]
288. sK6 = sK13 [subsumption resolution 287,110]
289. filter_mset(sK5,sK6,'Cons'(sK5,sK6,sK14)) != filter_mset(sK5,sK6,'Cons'(sK5,sK6,isort(sK5,sK14))) [backward demodulation 177,288]
290. filter_mset(sK5,sK6,'Cons'(sK5,sK6,sK14)) != 'Cons'(sK5,sK6,filter_mset(sK5,sK6,isort(sK5,sK14))) [forward demodulation 289,206]
291. filter_mset(sK5,sK6,'Cons'(sK5,sK6,sK14)) != 'Cons'(sK5,sK6,filter_mset(sK5,sK6,sK14)) [forward demodulation 290,173]
292. $false [subsumption resolution 291,206]
% SZS output end Proof for conjecture
% ------------------------------
% Version: Vampire 4.7 (commit )
% Linked with Z3 4.9.1.0  NOTFOUND
% Termination reason: Refutation

% Memory used [KB]: 5245
% Time elapsed: 0.010 s
% ------------------------------
% ------------------------------
