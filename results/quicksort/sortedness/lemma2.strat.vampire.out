% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma2
% SZS output start Proof for lemma2
7. filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [input]
9. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
13. ! [X0 : $tType] : ! [X2 : 'list()'(X0),X1 : X0] : (list_ge_elem(X0,X2,X1) => list_ge_elem(X0,quicksort(X0,X2),X1)) [input]
14. ! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [input]
15. ~! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [negated conjecture 14]
18. filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [theory normalization 7]
20. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [theory normalization 9]
37. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [closure 18]
38. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG2(X0,X1,X3,X4,X2)) [fool match definition]
39. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~~less(X0,X3,X1) => filter_ge(X0,X1,X4) = iG3(X0,X1,X3,X4)) & ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~less(X0,X3,X1) => 'Cons'(X0,X3,filter_ge(X0,X1,X4)) = iG3(X0,X1,X3,X4)) [fool ite definition]
40. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG2(X0,X1,X3,X4,X2) = iG3(X0,X1,X3,X4)) [fool match definition]
41. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = mG2(X0,X1,X3,X4,X2) [fool elimination 37,40,39,38]
46. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 20]
47. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG5(X0,X2,X3,X4,X1) <=> $true)) [fool match definition]
48. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG5(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool match definition]
49. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG5(X0,X2,X3,X4,X1)) [fool elimination 46,48,47]
70. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG5(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 48]
71. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG5(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 70]
72. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => (mG5(X0,X1,X2,X3,X4) <=> $true)) [rectify 47]
73. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG5(X0,X1,X2,X3,X4)) [true and false elimination 72]
76. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => mG2(X0,X1,X2,X3,X4) = iG3(X0,X1,X2,X3)) [rectify 40]
77. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~~less(X0,X2,X1) => iG3(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) & ! [X4 : $tType,X5 : X4,X6 : X4,X7 : 'list()'(X4)] : (~less(X4,X6,X5) => 'Cons'(X4,X6,filter_ge(X4,X5,X7)) = iG3(X4,X5,X6,X7)) [rectify 39]
78. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (less(X0,X2,X1) => iG3(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) & ! [X4 : $tType,X5 : X4,X6 : X4,X7 : 'list()'(X4)] : (~less(X4,X6,X5) => 'Cons'(X4,X6,filter_ge(X4,X5,X7)) = iG3(X4,X5,X6,X7)) [flattening 77]
79. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG2(X0,X1,X2,X3,X4)) [rectify 38]
94. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_ge(X4,X3,X2) = mG2(X4,X3,X1,X0,X2) [rectify 41]
96. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG5(X4,X2,X1,X0,X3)) [rectify 49]
100. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [rectify 13]
101. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [flattening 100]
102. ~! [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [flattening 15]
109. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG5(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 71]
110. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 73]
113. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG2(X0,X1,X2,X3,X4) = iG3(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 76]
114. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG3(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1)) & ! [X4 : $tType,X5 : X4,X6 : X4,X7 : 'list()'(X4)] : ('Cons'(X4,X6,filter_ge(X4,X5,X7)) = iG3(X4,X5,X6,X7) | less(X4,X6,X5)) [ennf transformation 78]
115. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 79]
123. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2)) [ennf transformation 101]
124. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [ennf transformation 102]
129. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG5(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG5(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 109]
130. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG5(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG5(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 129]
132. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG5(X4,X2,X1,X0,X3)) & (mG5(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 96]
135. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) => ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [choice axiom]
136. ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [skolemisation 124,135]
148. ~less(X0,X2,X1) | ~mG5(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 130]
149. mG5(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 130]
150. mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 110]
153. mG2(X0,X1,X2,X3,X4) = iG3(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 113]
154. 'Cons'(X4,X6,filter_ge(X4,X5,X7)) = iG3(X4,X5,X6,X7) | less(X4,X6,X5) [cnf transformation 114]
155. iG3(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1) [cnf transformation 114]
156. 'Nil'(X0) = mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 115]
168. filter_ge(X4,X3,X2) = mG2(X4,X3,X1,X0,X2) [cnf transformation 94]
170. mG5(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 132]
171. ~mG5(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 132]
177. list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2) [cnf transformation 123]
178. ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [cnf transformation 136]
183. filter_ge(X0,X1,X4) = iG3(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [definition unfolding 153,168]
184. 'Nil'(X0) = filter_ge(X0,X1,X4) | 'Nil'(X0) != X4 [definition unfolding 156,168]
197. mG5(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 149]
198. ~mG5(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 148]
200. mG5(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 150]
203. iG3(X0,X1,X2,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [equality resolution 183]
204. 'Nil'(X0) = filter_ge(X0,X1,'Nil'(X0)) [equality resolution 184]
207. ~less(X0,X2,X1) | filter_ge(X0,X1,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 155,203]
208. less(X4,X6,X5) | 'Cons'(X4,X6,filter_ge(X4,X5,X7)) = filter_ge(X4,X5,'Cons'(X4,X6,X7)) [forward demodulation 154,203]
275. list_ge_elem(X0,'Nil'(X0),X1) [resolution 171,200]
281. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK11),sK10) [resolution 177,178]
288. ! [X0 : sK9,X1 : 'list()'(sK9)] : (list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) & (list_ge_elem(sK9,filter_ge(sK9,sK10,X1),sK10) => list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,X0,X1)),sK10))) => ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [structural induction hypothesis (one)]
289. ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) | ? [X0 : sK9,X1 : 'list()'(sK9)] : (~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | (~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,X0,X1)),sK10) & list_ge_elem(sK9,filter_ge(sK9,sK10,X1),sK10))) [ennf transformation 288]
290. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [cnf transformation 289]
291. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [cnf transformation 289]
292. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) [induction hyperresolution 281,291]
293. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) [induction hyperresolution 281,290]
294. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) [forward demodulation 293,204]
295. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) [subsumption resolution 294,275]
296. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) [forward demodulation 292,204]
297. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) [subsumption resolution 296,275]
330. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 198,170]
449. list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~list_ge_elem(X0,X3,X2) | less(X0,X1,X2) [resolution 197,171]
452. 'Cons'(X0,X1,filter_ge(X0,X2,X3)) = filter_ge(X0,X2,'Cons'(X0,X1,X3)) | filter_ge(X0,X2,X4) = filter_ge(X0,X2,'Cons'(X0,X1,X4)) [resolution 208,207]
599. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) [superposition 297,452]
608. 19 <=> ! [X0 : 'list()'(sK9)] : filter_ge(sK9,sK10,X0) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) [avatar definition]
609. filter_ge(sK9,sK10,X0) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) <- (19) [avatar component clause 608]
611. 20 <=> list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) [avatar definition]
613. ~list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) <- (~20) [avatar component clause 611]
617. 21 <=> list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) [avatar definition]
618. list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) <- (21) [avatar component clause 617]
619. ~list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) <- (~21) [avatar component clause 617]
640. filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) [subsumption resolution 599,295]
641. ~list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) [backward demodulation 297,640]
643. ~20 [avatar split clause 641,611]
669. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | less(sK9,sK15,sK10) <- (~21) [resolution 619,449]
670. less(sK9,sK15,sK10) <- (~21) [subsumption resolution 669,275]
674. filter_ge(sK9,sK10,X0) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) <- (~21) [resolution 670,207]
677. 19 | 21 [avatar split clause 674,617,608]
678. filter_ge(sK9,sK10,X0) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) <- (19) [backward demodulation 640,609]
679. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) <- (19, ~20) [backward demodulation 613,678]
680. $false <- (19, ~20) [subsumption resolution 679,295]
681. ~19 | 20 [avatar contradiction clause 680]
736. ~less(sK9,sK15,sK10) <- (21) [resolution 618,330]
2121. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | less(sK9,sK15,sK10) <- (~20) [resolution 613,449]
2128. less(sK9,sK15,sK10) <- (~20) [subsumption resolution 2121,295]
2129. $false <- (~20, 21) [subsumption resolution 2128,736]
2130. 20 | ~21 [avatar contradiction clause 2129]
2135. $false [avatar sat refutation 643,677,681,2130]
% SZS output end Proof for lemma2
% ------------------------------
% Version: Vampire 4.9 (commit 5ad494e78 on 2024-06-14 14:05:27 +0100)
% Linked with Z3 4.12.3.0 79bbbf76d0c123481c8ca05cd3a98939270074d3 z3-4.8.4-7980-g79bbbf76d
% Termination reason: Refutation

% Memory used [KB]: 1248
% Time elapsed: 0.057 s
% Instructions burned: 245 (million)
% ------------------------------
% ------------------------------
