% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for conjecture
% SZS output start Proof for conjecture
7. filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [input]
9. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
10. (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [input]
11. quicksort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3))))) [input]
13. ! [X0 : $tType] : ! [X3 : 'list()'(X0),X1 : X0,X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X3) & list_ge_elem(X0,X3,X1) & list_ge_list(X0,'Cons'(X0,X1,X3),X2)) => sorted(X0,append(X0,X2,'Cons'(X0,X1,X3)))) [input]
14. ! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [input]
15. ! [X0 : $tType] : ! [X2 : 'list()'(X0),X1 : X0] : (list_ge_elem(X0,X2,X1) => list_ge_elem(X0,quicksort(X0,X2),X1)) [input]
17. ! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [input]
18. ~! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [negated conjecture 17]
25. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [closure 10]
26. ! [X0 : $tType,X2 : X0,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG0(X0,X2,X3,X1) <=> $true)) [fool $match elimination 25]
28. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) <=> mG0(X0,X2,X3,X1)) [fool elimination 25]
33. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 9]
34. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG2(X0,X2,X3,X4,X1) <=> $true)) [fool $match elimination 33]
35. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG2(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 33]
36. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG2(X0,X2,X3,X4,X1)) [fool elimination 33]
39. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : quicksort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3))))) [closure 11]
40. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => 'Nil'(X0) = mG3(X0,X3,X2,X1)) [fool $match elimination 39]
41. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3)))) = mG3(X0,X3,X2,X1)) [fool $match elimination 39]
42. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : quicksort(X0,X1) = mG3(X0,X3,X2,X1) [fool elimination 39]
49. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [closure 7]
50. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG6(X0,X1,X3,X4,X2)) [fool $match elimination 49]
51. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~less(X0,X3,X1) => 'Cons'(X0,X3,filter_ge(X0,X1,X4)) = iG7(X0,X1,X3,X4)) [fool $ite elimination 49]
52. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~~less(X0,X3,X1) => filter_ge(X0,X1,X4) = iG7(X0,X1,X3,X4)) [fool $ite elimination 49]
53. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG6(X0,X1,X3,X4,X2) = iG7(X0,X1,X3,X4)) [fool $match elimination 49]
54. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = mG6(X0,X1,X3,X4,X2) [fool elimination 49]
61. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => mG6(X0,X1,X2,X3,X4) = iG7(X0,X1,X2,X3)) [rectify 53]
62. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~~less(X0,X2,X1) => iG7(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [rectify 52]
63. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (less(X0,X2,X1) => iG7(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [flattening 62]
64. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG7(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [rectify 51]
65. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG7(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [flattening 64]
66. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG6(X0,X1,X2,X3,X4)) [rectify 50]
72. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Cons'(X0,X2,X1) = X3 => append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG3(X0,X1,X2,X3)) [rectify 41]
73. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => 'Nil'(X0) = mG3(X0,X1,X2,X3)) [rectify 40]
74. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 35]
75. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 74]
76. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => (mG2(X0,X1,X2,X3,X4) <=> $true)) [rectify 34]
77. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG2(X0,X1,X2,X3,X4)) [true and false elimination 76]
82. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => (mG0(X0,X1,X2,X3) <=> $true)) [rectify 26]
83. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => mG0(X0,X1,X2,X3)) [true and false elimination 82]
84. ~! [X0 : $tType,X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [flattening 18]
85. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : (sorted(X3,X2) <=> mG0(X3,X1,X0,X2)) [rectify 28]
87. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG2(X4,X2,X1,X0,X3)) [rectify 36]
90. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : quicksort(X3,X2) = mG3(X3,X0,X1,X2) [rectify 42]
92. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_ge(X4,X3,X2) = mG6(X4,X3,X1,X0,X2) [rectify 54]
95. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [flattening 14]
98. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [rectify 15]
99. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [flattening 98]
106. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [rectify 13]
107. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [flattening 106]
110. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG6(X0,X1,X2,X3,X4) = iG7(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 61]
111. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG7(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1)) [ennf transformation 63]
112. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG7(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1)) [ennf transformation 65]
113. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG6(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 66]
118. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG3(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3) [ennf transformation 72]
119. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = mG3(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 73]
120. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 75]
121. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 77]
125. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (mG0(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 83]
126. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,quicksort(X0,X1)) [ennf transformation 84]
127. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2)) [ennf transformation 99]
133. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) | (~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | ~list_ge_list(X0,'Cons'(X0,X2,X1),X3))) [ennf transformation 107]
134. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) | ~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | ~list_ge_list(X0,'Cons'(X0,X2,X1),X3)) [flattening 133]
135. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 120]
136. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 135]
141. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,quicksort(X0,X1)) => ~sorted(sK9,quicksort(sK9,sK10)) [choice axiom]
142. ~sorted(sK9,quicksort(sK9,sK10)) [skolemisation 126,141]
143. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : ((sorted(X3,X2) | ~mG0(X3,X1,X0,X2)) & (mG0(X3,X1,X0,X2) | ~sorted(X3,X2))) [nnf transformation 85]
145. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG2(X4,X2,X1,X0,X3)) & (mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 87]
150. mG6(X0,X1,X2,X3,X4) = iG7(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 110]
151. iG7(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1) [cnf transformation 111]
152. iG7(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1) [cnf transformation 112]
153. 'Nil'(X0) = mG6(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 113]
158. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG3(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3 [cnf transformation 118]
159. 'Nil'(X0) = mG3(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 119]
161. ~less(X0,X2,X1) | ~mG2(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 136]
162. mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 136]
163. mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 121]
171. mG0(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 125]
172. ~sorted(sK9,quicksort(sK9,sK10)) [cnf transformation 142]
174. ~mG0(X3,X1,X0,X2) | sorted(X3,X2) [cnf transformation 143]
177. mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 145]
178. ~mG2(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 145]
181. quicksort(X3,X2) = mG3(X3,X0,X1,X2) [cnf transformation 90]
183. filter_ge(X4,X3,X2) = mG6(X4,X3,X1,X0,X2) [cnf transformation 92]
186. list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [cnf transformation 95]
188. list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2) [cnf transformation 127]
192. ~list_ge_list(X0,'Cons'(X0,X2,X1),X3) | ~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) [cnf transformation 134]
195. filter_ge(X0,X1,X4) = iG7(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [definition unfolding 150,183]
196. 'Nil'(X0) = filter_ge(X0,X1,X4) | 'Nil'(X0) != X4 [definition unfolding 153,183]
199. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = quicksort(X0,X3) | 'Cons'(X0,X2,X1) != X3 [definition unfolding 158,181]
200. 'Nil'(X0) = quicksort(X0,X3) | 'Nil'(X0) != X3 [definition unfolding 159,181]
203. iG7(X0,X1,X2,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [equality resolution 195]
204. 'Nil'(X0) = filter_ge(X0,X1,'Nil'(X0)) [equality resolution 196]
207. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = quicksort(X0,'Cons'(X0,X2,X1)) [equality resolution 199]
208. 'Nil'(X0) = quicksort(X0,'Nil'(X0)) [equality resolution 200]
209. mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 162]
210. ~mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 161]
212. mG2(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 163]
220. mG0(X0,X1,X2,'Nil'(X0)) [equality resolution 171]
221. ~less(X0,X2,X1) | filter_ge(X0,X1,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 151,203]
222. less(X0,X2,X1) | 'Cons'(X0,X2,filter_ge(X0,X1,X3)) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 152,203]
229. ! [X2 : 'list()'(sK9),X1 : sK9] : (((sorted(sK9,quicksort(sK9,filter_ge(sK9,X1,X2))) & sorted(sK9,quicksort(sK9,filter_less(sK9,X1,X2)))) => sorted(sK9,quicksort(sK9,'Cons'(sK9,X1,X2)))) & sorted(sK9,quicksort(sK9,'Nil'(sK9)))) => ! [X4 : 'list()'(sK9)] : sorted(sK9,quicksort(sK9,X4)) [structural induction hypothesis (recursion)]
230. ! [X4 : 'list()'(sK9)] : sorted(sK9,quicksort(sK9,X4)) | ? [X2 : 'list()'(sK9),X1 : sK9] : ((~sorted(sK9,quicksort(sK9,'Cons'(sK9,X1,X2))) & (sorted(sK9,quicksort(sK9,filter_ge(sK9,X1,X2))) & sorted(sK9,quicksort(sK9,filter_less(sK9,X1,X2))))) | ~sorted(sK9,quicksort(sK9,'Nil'(sK9)))) [ennf transformation 229]
231. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
232. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
233. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
236. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [induction hyperresolution 172,233]
237. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [induction hyperresolution 172,232]
238. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [induction hyperresolution 172,231]
239. ~sorted(sK9,'Nil'(sK9)) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [forward demodulation 238,208]
241. 1 <=> sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [avatar definition]
243. sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) <- (1) [avatar component clause 241]
245. 2 <=> sorted(sK9,'Nil'(sK9)) [avatar definition]
247. ~sorted(sK9,'Nil'(sK9)) <- (~2) [avatar component clause 245]
248. 1 | ~2 [avatar split clause 239,245,241]
249. ~sorted(sK9,'Nil'(sK9)) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [forward demodulation 237,208]
251. 3 <=> sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [avatar definition]
253. sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) <- (3) [avatar component clause 251]
254. 3 | ~2 [avatar split clause 249,245,251]
255. ~sorted(sK9,'Nil'(sK9)) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [forward demodulation 236,208]
257. 4 <=> sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [avatar definition]
259. ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) <- (~4) [avatar component clause 257]
260. ~4 | ~2 [avatar split clause 255,245,257]
276. sorted(X0,'Nil'(X0)) [resolution 174,220]
280. $false <- (~2) [resolution 276,247]
281. 2 [avatar contradiction clause 280]
327. list_ge_elem(X0,'Nil'(X0),X1) [resolution 178,212]
379. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 210,177]
477. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 209,178]
503. 'Cons'(X8,X9,filter_ge(X8,X10,X11)) = filter_ge(X8,X10,'Cons'(X8,X9,X11)) | filter_ge(X8,X10,X12) = filter_ge(X8,X10,'Cons'(X8,X9,X12)) [resolution 222,221]
514. ~sorted(X0,quicksort(X0,filter_less(X0,X1,X2))) | ~sorted(X0,quicksort(X0,filter_ge(X0,X1,X2))) | ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) | sorted(X0,append(X0,quicksort(X0,filter_less(X0,X1,X2)),'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))))) [resolution 192,186]
518. ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) | ~sorted(X0,quicksort(X0,filter_less(X0,X1,X2))) | ~sorted(X0,quicksort(X0,filter_ge(X0,X1,X2))) | sorted(X0,quicksort(X0,'Cons'(X0,X1,X2))) [forward demodulation 514,207]
876. ~sorted(X0,quicksort(X0,filter_ge(X0,X1,X2))) | ~sorted(X0,quicksort(X0,filter_less(X0,X1,X2))) | sorted(X0,quicksort(X0,'Cons'(X0,X1,X2))) | ~list_ge_elem(X0,filter_ge(X0,X1,X2),X1) [resolution 518,188]
1474. ~sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK14),sK15) <- (3) [resolution 876,253]
1481. sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK14),sK15) <- (1, 3) [subsumption resolution 1474,243]
1482. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK14),sK15) <- (1, 3, ~4) [subsumption resolution 1481,259]
1497. ! [X0 : sK9,X1 : 'list()'(sK9)] : (list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) & (list_ge_elem(sK9,filter_ge(sK9,sK15,X1),sK15) => list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,X0,X1)),sK15))) => ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [structural induction hypothesis (one)]
1498. ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) | ? [X0 : sK9,X1 : 'list()'(sK9)] : (~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | (~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,X0,X1)),sK15) & list_ge_elem(sK9,filter_ge(sK9,sK15,X1),sK15))) [ennf transformation 1497]
1499. list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [cnf transformation 1498]
1500. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK24,sK25)),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [cnf transformation 1498]
1501. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK24,sK25)),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) <- (1, 3, ~4) [induction hyperresolution 1482,1500]
1502. list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) <- (1, 3, ~4) [induction hyperresolution 1482,1499]
1503. ~list_ge_elem(sK9,'Nil'(sK9),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) <- (1, 3, ~4) [forward demodulation 1502,204]
1504. list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) <- (1, 3, ~4) [subsumption resolution 1503,327]
1505. ~list_ge_elem(sK9,'Nil'(sK9),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK24,sK25)),sK15) <- (1, 3, ~4) [forward demodulation 1501,204]
1506. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK24,sK25)),sK15) <- (1, 3, ~4) [subsumption resolution 1505,327]
2420. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) | 'Cons'(sK9,sK24,filter_ge(sK9,sK15,X1)) = filter_ge(sK9,sK15,'Cons'(sK9,sK24,X1)) <- (1, 3, ~4) [superposition 1506,503]
2433. 28 <=> list_ge_elem(sK9,'Cons'(sK9,sK24,filter_ge(sK9,sK15,sK25)),sK15) [avatar definition]
2435. ~list_ge_elem(sK9,'Cons'(sK9,sK24,filter_ge(sK9,sK15,sK25)),sK15) <- (~28) [avatar component clause 2433]
2437. 'Cons'(sK9,sK24,filter_ge(sK9,sK15,X1)) = filter_ge(sK9,sK15,'Cons'(sK9,sK24,X1)) <- (1, 3, ~4) [subsumption resolution 2420,1504]
2438. ~list_ge_elem(sK9,'Cons'(sK9,sK24,filter_ge(sK9,sK15,sK25)),sK15) <- (1, 3, ~4) [backward demodulation 1506,2437]
2439. ~28 | ~1 | ~3 | 4 [avatar split clause 2438,257,251,241,2433]
2442. 29 <=> ! [X2 : 'list()'(sK9)] : filter_ge(sK9,sK15,X2) = 'Cons'(sK9,sK24,filter_ge(sK9,sK15,X2)) [avatar definition]
2443. filter_ge(sK9,sK15,X2) = 'Cons'(sK9,sK24,filter_ge(sK9,sK15,X2)) <- (29) [avatar component clause 2442]
2454. 31 <=> list_ge_elem(sK9,'Cons'(sK9,sK24,'Nil'(sK9)),sK15) [avatar definition]
2455. list_ge_elem(sK9,'Cons'(sK9,sK24,'Nil'(sK9)),sK15) <- (31) [avatar component clause 2454]
2456. ~list_ge_elem(sK9,'Cons'(sK9,sK24,'Nil'(sK9)),sK15) <- (~31) [avatar component clause 2454]
2466. ~list_ge_elem(sK9,'Nil'(sK9),sK15) | less(sK9,sK24,sK15) <- (~31) [resolution 2456,477]
2467. less(sK9,sK24,sK15) <- (~31) [subsumption resolution 2466,327]
2518. filter_ge(sK9,sK15,X0) = filter_ge(sK9,sK15,'Cons'(sK9,sK24,X0)) <- (~31) [resolution 2467,221]
2526. filter_ge(sK9,sK15,X1) = 'Cons'(sK9,sK24,filter_ge(sK9,sK15,X1)) <- (1, 3, ~4, ~31) [backward demodulation 2437,2518]
2527. 29 | ~1 | ~3 | 4 | 31 [avatar split clause 2526,2454,257,251,241,2442]
2529. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) <- (~28, 29) [backward demodulation 2435,2443]
2530. $false <- (1, 3, ~4, ~28, 29) [subsumption resolution 2529,1504]
2531. ~1 | ~3 | 4 | 28 | ~29 [avatar contradiction clause 2530]
2533. ~less(sK9,sK24,sK15) <- (31) [resolution 2455,379]
3293. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK25),sK15) | less(sK9,sK24,sK15) <- (~28) [resolution 2435,477]
3300. less(sK9,sK24,sK15) <- (1, 3, ~4, ~28) [subsumption resolution 3293,1504]
3301. $false <- (1, 3, ~4, ~28, 31) [subsumption resolution 3300,2533]
3302. ~1 | ~3 | 4 | 28 | ~31 [avatar contradiction clause 3301]
3307. $false [avatar sat refutation 248,254,260,281,2439,2527,2531,3302]
% SZS output end Proof for conjecture
% ------------------------------
% Version: Vampire 4.7 (commit )
% Linked with Z3 4.9.1.0  NOTFOUND
% Termination reason: Refutation

% Memory used [KB]: 8059
% Time elapsed: 0.149 s
% ------------------------------
% ------------------------------
