% (55912)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=on_89 on lemma6 for (89ds/0Mi)
% (55910)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=on_89 on lemma6 for (89ds/0Mi)
% (55909)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=off_89 on lemma6 for (89ds/0Mi)
% (55913)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=off_89 on lemma6 for (89ds/0Mi)
% (55911)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=off_89 on lemma6 for (89ds/0Mi)
% (55914)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=on_89 on lemma6 for (89ds/0Mi)
% (55915)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=off_89 on lemma6 for (89ds/0Mi)
% (55916)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=on_89 on lemma6 for (89ds/0Mi)
% (55917)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=off_89 on lemma6 for (89ds/0Mi)
% (55918)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=on_89 on lemma6 for (89ds/0Mi)
% (55919)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=off_89 on lemma6 for (89ds/0Mi)
% (55920)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=on_89 on lemma6 for (89ds/0Mi)
% (55922)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=on_89 on lemma6 for (89ds/0Mi)
% (55921)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=off_89 on lemma6 for (89ds/0Mi)
% (55917)First to succeed.
% (55919)Also succeeded, but the first one will report.
% (55917)Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma6
% SZS output start Proof for lemma6
6. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
7. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
8. ! [X0 : $tType] : ! [X2 : X0,X1 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X1,X2) & list_ge_elem(X0,X3,X2) & list_ge_elem(X0,X4,X2)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X1,X4)),X2)) [input]
9. ~! [X0 : $tType] : ! [X2 : X0,X1 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X1,X2) & list_ge_elem(X0,X3,X2) & list_ge_elem(X0,X4,X2)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X1,X4)),X2)) [negated conjecture 8]
16. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 7]
18. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG0(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 16]
19. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG0(X0,X2,X3,X4,X1)) [fool elimination 16]
20. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 6]
21. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => mG1(X0,X2,X4,X3,X1) = X2) [fool $match elimination 20]
22. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG1(X0,X2,X4,X3,X1)) [fool $match elimination 20]
23. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG1(X0,X2,X4,X3,X1) [fool elimination 20]
26. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4)) [rectify 22]
27. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG1(X0,X1,X2,X3,X4) = X1) [rectify 21]
28. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 18]
29. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 28]
32. ~! [X0 : $tType] : ! [X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1)) [rectify 9]
33. ~! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1)) [flattening 32]
34. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG0(X4,X2,X1,X0,X3)) [rectify 19]
35. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG1(X4,X2,X0,X1,X3) [rectify 23]
45. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 26]
46. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : (mG1(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4) [ennf transformation 27]
47. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 29]
49. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1))) [ennf transformation 33]
50. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & ~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) [flattening 49]
55. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 47]
56. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 55]
57. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & ~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => (~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) & ~less(sK2,sK4,sK3) & list_ge_elem(sK2,sK5,sK3) & list_ge_elem(sK2,sK6,sK3)) [choice axiom]
58. ~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) & ~less(sK2,sK4,sK3) & list_ge_elem(sK2,sK5,sK3) & list_ge_elem(sK2,sK6,sK3) [skolemisation 50,57]
59. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG0(X4,X2,X1,X0,X3)) & (mG0(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 34]
61. 'Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 45]
62. mG1(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4 [cnf transformation 46]
63. list_ge_elem(X0,X3,X1) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
64. ~less(X0,X2,X1) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
65. mG0(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
67. list_ge_elem(sK2,sK6,sK3) [cnf transformation 58]
68. list_ge_elem(sK2,sK5,sK3) [cnf transformation 58]
69. ~less(sK2,sK4,sK3) [cnf transformation 58]
70. ~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 58]
71. mG0(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 59]
72. ~mG0(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 59]
73. append(X4,X3,X2) = mG1(X4,X2,X0,X1,X3) [cnf transformation 35]
80. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 61,73]
81. append(X0,X4,X1) = X1 | 'Nil'(X0) != X4 [definition unfolding 62,73]
82. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 80]
83. append(X0,'Nil'(X0),X1) = X1 [equality resolution 81]
84. mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 65]
85. ~mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 64]
86. ~mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | list_ge_elem(X0,X3,X1) [equality resolution 63]
132. ! [X2 : 'list()'(sK2),X1 : sK2] : (((list_ge_elem(sK2,append(sK2,X2,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X2,sK3)) => (list_ge_elem(sK2,append(sK2,'Cons'(sK2,X1,X2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,'Cons'(sK2,X1,X2),sK3))) & (list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,'Nil'(sK2),sK3))) => ! [X6 : 'list()'(sK2)] : (list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3)) [structural induction hypothesis (recursion)]
133. ! [X6 : 'list()'(sK2)] : (list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3)) | ? [X2 : 'list()'(sK2),X1 : sK2] : (((~list_ge_elem(sK2,append(sK2,'Cons'(sK2,X1,X2),'Cons'(sK2,sK4,sK6)),sK3) & list_ge_elem(sK2,'Cons'(sK2,X1,X2),sK3)) & (list_ge_elem(sK2,append(sK2,X2,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X2,sK3))) | (~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) & list_ge_elem(sK2,'Nil'(sK2),sK3))) [ennf transformation 132]
136. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 133]
137. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 133]
139. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 133]
170. 2 <=> list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) [avatar definition]
172. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) <- (~2) [avatar component clause 170]
195. 6 <=> list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [avatar definition]
197. list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) <- (6) [avatar component clause 195]
205. 8 <=> list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) [avatar definition]
207. ~list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) <- (~8) [avatar component clause 205]
215. 9 <=> list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [avatar definition]
217. list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) <- (9) [avatar component clause 215]
219. 10 <=> list_ge_elem(sK2,sK10,sK3) [avatar definition]
286. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 85,71]
287. ~list_ge_elem(X0,'Cons'(X0,X3,X1),X2) | list_ge_elem(X0,X1,X2) [resolution 86,71]
390. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 84,72]
416. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [induction hyperresolution 68,70,139]
418. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) [induction hyperresolution 68,70,137]
419. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [induction hyperresolution 68,70,136]
431. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [forward demodulation 419,83]
432. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) [forward demodulation 418,83]
433. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [forward demodulation 416,83]
445. ~list_ge_elem(sK2,sK6,sK3) | less(sK2,sK4,sK3) <- (~2) [resolution 172,390]
448. less(sK2,sK4,sK3) <- (~2) [subsumption resolution 445,67]
449. $false <- (~2) [subsumption resolution 448,69]
450. 2 [avatar contradiction clause 449]
454. 9 | ~10 | ~2 [avatar split clause 433,170,219,215]
455. ~list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) | ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) [forward demodulation 432,82]
456. ~2 | ~8 [avatar split clause 455,205,170]
457. 6 | ~2 [avatar split clause 431,170,195]
485. list_ge_elem(sK2,sK10,sK3) <- (6) [resolution 197,287]
486. ~less(sK2,sK11,sK3) <- (6) [resolution 197,286]
521. 10 | ~6 [avatar split clause 485,195,219]
823. ~list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) | less(sK2,sK11,sK3) <- (~8) [resolution 207,390]
864. less(sK2,sK11,sK3) <- (~8, 9) [subsumption resolution 823,217]
865. $false <- (6, ~8, 9) [subsumption resolution 864,486]
866. ~6 | 8 | ~9 [avatar contradiction clause 865]
943. $false [avatar sat refutation 450,454,456,457,521,866]
% SZS output end Proof for lemma6
% (55917)------------------------------
% (55917)Version: Vampire 4.7 (commit )
% (55917)Linked with Z3 4.9.1.0  NOTFOUND
% (55917)Termination reason: Refutation

% (55917)Memory used [KB]: 5884
% (55917)Time elapsed: 0.014 s
% (55917)------------------------------
% (55917)------------------------------
% (55908)Success in time 0.014 s
