% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma6
% SZS output start Proof for lemma6
6. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
7. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
8. ! [X0 : $tType] : ! [X2 : X0,X1 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X1,X2) & list_ge_elem(X0,X3,X2) & list_ge_elem(X0,X4,X2)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X1,X4)),X2)) [input]
9. ~! [X0 : $tType] : ! [X2 : X0,X1 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X1,X2) & list_ge_elem(X0,X3,X2) & list_ge_elem(X0,X4,X2)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X1,X4)),X2)) [negated conjecture 8]
16. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 7]
18. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG0(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 16]
19. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG0(X0,X2,X3,X4,X1)) [fool elimination 16]
22. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 6]
23. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => mG1(X0,X2,X4,X3,X1) = X2) [fool $match elimination 22]
24. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG1(X0,X2,X4,X3,X1)) [fool $match elimination 22]
25. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG1(X0,X2,X4,X3,X1) [fool elimination 22]
26. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4)) [rectify 24]
27. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG1(X0,X1,X2,X3,X4) = X1) [rectify 23]
28. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 18]
29. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 28]
32. ~! [X0 : $tType] : ! [X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1)) [rectify 9]
33. ~! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1)) [flattening 32]
34. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG0(X4,X2,X1,X0,X3)) [rectify 19]
37. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG1(X4,X2,X0,X1,X3) [rectify 25]
45. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 26]
46. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : (mG1(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4) [ennf transformation 27]
47. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG0(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 29]
49. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1))) [ennf transformation 33]
50. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & ~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) [flattening 49]
55. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 47]
56. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 55]
57. ? [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (~list_ge_elem(X0,append(X0,X3,'Cons'(X0,X2,X4)),X1) & ~less(X0,X2,X1) & list_ge_elem(X0,X3,X1) & list_ge_elem(X0,X4,X1)) => (~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) & ~less(sK2,sK4,sK3) & list_ge_elem(sK2,sK5,sK3) & list_ge_elem(sK2,sK6,sK3)) [choice axiom]
58. ~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) & ~less(sK2,sK4,sK3) & list_ge_elem(sK2,sK5,sK3) & list_ge_elem(sK2,sK6,sK3) [skolemisation 50,57]
59. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG0(X4,X2,X1,X0,X3)) & (mG0(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 34]
61. 'Cons'(X0,X3,append(X0,X2,X1)) = mG1(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 45]
62. mG1(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4 [cnf transformation 46]
63. list_ge_elem(X0,X3,X1) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
64. ~less(X0,X2,X1) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
65. mG0(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 56]
67. list_ge_elem(sK2,sK6,sK3) [cnf transformation 58]
68. list_ge_elem(sK2,sK5,sK3) [cnf transformation 58]
69. ~less(sK2,sK4,sK3) [cnf transformation 58]
70. ~list_ge_elem(sK2,append(sK2,sK5,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 58]
71. mG0(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 59]
72. ~mG0(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 59]
75. append(X4,X3,X2) = mG1(X4,X2,X0,X1,X3) [cnf transformation 37]
80. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 61,75]
81. append(X0,X4,X1) = X1 | 'Nil'(X0) != X4 [definition unfolding 62,75]
82. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 80]
83. append(X0,'Nil'(X0),X1) = X1 [equality resolution 81]
84. mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 65]
85. ~mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 64]
86. ~mG0(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | list_ge_elem(X0,X3,X1) [equality resolution 63]
104. ! [X2 : 'list()'(sK2),X1 : sK2] : (((list_ge_elem(sK2,append(sK2,X2,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X2,sK3)) => (list_ge_elem(sK2,append(sK2,'Cons'(sK2,X1,X2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,'Cons'(sK2,X1,X2),sK3))) & (list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,'Nil'(sK2),sK3))) => ! [X6 : 'list()'(sK2)] : (list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3)) [structural induction hypothesis (recursion)]
105. ! [X6 : 'list()'(sK2)] : (list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3)) | ? [X2 : 'list()'(sK2),X1 : sK2] : (((~list_ge_elem(sK2,append(sK2,'Cons'(sK2,X1,X2),'Cons'(sK2,sK4,sK6)),sK3) & list_ge_elem(sK2,'Cons'(sK2,X1,X2),sK3)) & (list_ge_elem(sK2,append(sK2,X2,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X2,sK3))) | (~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) & list_ge_elem(sK2,'Nil'(sK2),sK3))) [ennf transformation 104]
108. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 105]
109. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 105]
111. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,X6,sK3) | list_ge_elem(sK2,append(sK2,X6,'Cons'(sK2,sK4,sK6)),sK3) [cnf transformation 105]
176. 5 <=> list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) [avatar definition]
178. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) <- (~5) [avatar component clause 176]
227. 14 <=> list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [avatar definition]
229. list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) <- (14) [avatar component clause 227]
233. 15 <=> list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) [avatar definition]
235. ~list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) <- (~15) [avatar component clause 233]
243. 16 <=> list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [avatar definition]
245. list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) <- (16) [avatar component clause 243]
247. 17 <=> list_ge_elem(sK2,sK10,sK3) [avatar definition]
310. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 85,71]
362. ~list_ge_elem(X0,'Cons'(X0,X3,X1),X2) | list_ge_elem(X0,X1,X2) [resolution 86,71]
486. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 84,72]
532. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [induction hyperresolution 68,70,111]
534. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) [induction hyperresolution 68,70,109]
535. ~list_ge_elem(sK2,append(sK2,'Nil'(sK2),'Cons'(sK2,sK4,sK6)),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [induction hyperresolution 68,70,108]
555. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | list_ge_elem(sK2,'Cons'(sK2,sK11,sK10),sK3) [forward demodulation 535,83]
556. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | ~list_ge_elem(sK2,append(sK2,'Cons'(sK2,sK11,sK10),'Cons'(sK2,sK4,sK6)),sK3) [forward demodulation 534,83]
557. ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) | ~list_ge_elem(sK2,sK10,sK3) | list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) [forward demodulation 532,83]
562. ~list_ge_elem(sK2,sK6,sK3) | less(sK2,sK4,sK3) <- (~5) [resolution 178,486]
565. less(sK2,sK4,sK3) <- (~5) [subsumption resolution 562,67]
566. $false <- (~5) [subsumption resolution 565,69]
567. 5 [avatar contradiction clause 566]
571. 16 | ~17 | ~5 [avatar split clause 557,176,247,243]
572. ~list_ge_elem(sK2,'Cons'(sK2,sK11,append(sK2,sK10,'Cons'(sK2,sK4,sK6))),sK3) | ~list_ge_elem(sK2,'Cons'(sK2,sK4,sK6),sK3) [forward demodulation 556,82]
573. ~5 | ~15 [avatar split clause 572,233,176]
574. 14 | ~5 [avatar split clause 555,176,227]
602. list_ge_elem(sK2,sK10,sK3) <- (14) [resolution 229,362]
603. ~less(sK2,sK11,sK3) <- (14) [resolution 229,310]
638. 17 | ~14 [avatar split clause 602,227,247]
1104. ~list_ge_elem(sK2,append(sK2,sK10,'Cons'(sK2,sK4,sK6)),sK3) | less(sK2,sK11,sK3) <- (~15) [resolution 235,486]
1151. less(sK2,sK11,sK3) <- (~15, 16) [subsumption resolution 1104,245]
1152. $false <- (14, ~15, 16) [subsumption resolution 1151,603]
1153. ~14 | 15 | ~16 [avatar contradiction clause 1152]
1244. $false [avatar sat refutation 567,571,573,574,638,1153]
% SZS output end Proof for lemma6
% ------------------------------
% Version: Vampire 4.7 (commit )
% Linked with Z3 4.9.1.0  NOTFOUND
% Termination reason: Refutation

% Memory used [KB]: 5756
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
