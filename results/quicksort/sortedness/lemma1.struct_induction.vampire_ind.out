% (49672)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=off_89 on lemma1 for (89ds/0Mi)
% (49674)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=off_89 on lemma1 for (89ds/0Mi)
% (49675)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=on_89 on lemma1 for (89ds/0Mi)
% (49673)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=on_89 on lemma1 for (89ds/0Mi)
% (49679)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=on_89 on lemma1 for (89ds/0Mi)
% (49678)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=off_89 on lemma1 for (89ds/0Mi)
% (49680)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=off_89 on lemma1 for (89ds/0Mi)
% (49681)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=on_89 on lemma1 for (89ds/0Mi)
% (49683)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=on_89 on lemma1 for (89ds/0Mi)
% (49685)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=on_89 on lemma1 for (89ds/0Mi)
% (49677)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=on_89 on lemma1 for (89ds/0Mi)
% (49676)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=off_89 on lemma1 for (89ds/0Mi)
% (49682)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=off_89 on lemma1 for (89ds/0Mi)
% (49684)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=off_89 on lemma1 for (89ds/0Mi)
% (49684)First to succeed.
% (49684)Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma1
% SZS output start Proof for lemma1
6. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
7. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
8. (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [input]
9. (list_ge_list(X0,X1,X2) = $match(X2,'Nil'(X0),$true,'Cons'(X0,X3,X4),list_ge_elem(X0,X1,X3) & list_ge_list(X0,X1,X4))) [input]
10. ! [X0 : $tType] : ! [X3 : 'list()'(X0),X1 : X0,X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X3) & list_ge_elem(X0,X3,X1) & list_ge_list(X0,'Cons'(X0,X1,X3),X2)) => sorted(X0,append(X0,X2,'Cons'(X0,X1,X3)))) [input]
11. ~! [X0 : $tType] : ! [X3 : 'list()'(X0),X1 : X0,X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X3) & list_ge_elem(X0,X3,X1) & list_ge_list(X0,'Cons'(X0,X1,X3),X2)) => sorted(X0,append(X0,X2,'Cons'(X0,X1,X3)))) [negated conjecture 10]
18. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : (list_ge_list(X0,X1,X2) = $match(X2,'Nil'(X0),$true,'Cons'(X0,X3,X4),list_ge_elem(X0,X1,X3) & list_ge_list(X0,X1,X4))) [closure 9]
20. ! [X0 : $tType,X3 : X0,X1 : 'list()'(X0),X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => (mG0(X0,X3,X1,X4,X2) <=> (list_ge_elem(X0,X1,X3) & list_ge_list(X0,X1,X4)))) [fool $match elimination 18]
21. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : (list_ge_list(X0,X1,X2) <=> mG0(X0,X3,X1,X4,X2)) [fool elimination 18]
22. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [closure 8]
24. ! [X0 : $tType,X2 : X0,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => (mG1(X0,X2,X3,X1) <=> (list_ge_elem(X0,X3,X2) & sorted(X0,X3)))) [fool $match elimination 22]
25. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) <=> mG1(X0,X2,X3,X1)) [fool elimination 22]
26. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 7]
28. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG2(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 26]
29. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG2(X0,X2,X3,X4,X1)) [fool elimination 26]
30. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 6]
31. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => mG3(X0,X2,X4,X3,X1) = X2) [fool $match elimination 30]
32. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG3(X0,X2,X4,X3,X1)) [fool $match elimination 30]
33. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG3(X0,X2,X4,X3,X1) [fool elimination 30]
36. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG3(X0,X1,X2,X3,X4)) [rectify 32]
37. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG3(X0,X1,X2,X3,X4) = X1) [rectify 31]
38. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 28]
39. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 38]
42. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Cons'(X0,X1,X2) = X3 => (mG1(X0,X1,X2,X3) <=> (list_ge_elem(X0,X2,X1) & sorted(X0,X2)))) [rectify 24]
45. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X1,X3) = X4 => (mG0(X0,X1,X2,X3,X4) <=> (list_ge_elem(X0,X2,X1) & list_ge_list(X0,X2,X3)))) [rectify 20]
48. ~! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [rectify 11]
49. ~! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [flattening 48]
50. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : (list_ge_list(X4,X3,X2) <=> mG0(X4,X1,X3,X0,X2)) [rectify 21]
51. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : (sorted(X3,X2) <=> mG1(X3,X1,X0,X2)) [rectify 25]
52. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG2(X4,X2,X1,X0,X3)) [rectify 29]
53. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG3(X4,X2,X0,X1,X3) [rectify 33]
63. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG3(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 36]
64. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : (mG3(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4) [ennf transformation 37]
65. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 39]
67. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ((mG1(X0,X1,X2,X3) <=> (list_ge_elem(X0,X2,X1) & sorted(X0,X2))) | 'Cons'(X0,X1,X2) != X3) [ennf transformation 42]
69. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG0(X0,X1,X2,X3,X4) <=> (list_ge_elem(X0,X2,X1) & list_ge_list(X0,X2,X3))) | 'Cons'(X0,X1,X3) != X4) [ennf transformation 45]
71. ? [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (~sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) & (sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3))) [ennf transformation 49]
72. ? [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (~sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) & sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) [flattening 71]
77. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 65]
78. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 77]
79. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (((mG1(X0,X1,X2,X3) | (~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2))) & ((list_ge_elem(X0,X2,X1) & sorted(X0,X2)) | ~mG1(X0,X1,X2,X3))) | 'Cons'(X0,X1,X2) != X3) [nnf transformation 67]
80. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (((mG1(X0,X1,X2,X3) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2)) & ((list_ge_elem(X0,X2,X1) & sorted(X0,X2)) | ~mG1(X0,X1,X2,X3))) | 'Cons'(X0,X1,X2) != X3) [flattening 79]
81. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | (~list_ge_elem(X0,X2,X1) | ~list_ge_list(X0,X2,X3))) & ((list_ge_elem(X0,X2,X1) & list_ge_list(X0,X2,X3)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X1,X3) != X4) [nnf transformation 69]
82. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG0(X0,X1,X2,X3,X4) | ~list_ge_elem(X0,X2,X1) | ~list_ge_list(X0,X2,X3)) & ((list_ge_elem(X0,X2,X1) & list_ge_list(X0,X2,X3)) | ~mG0(X0,X1,X2,X3,X4))) | 'Cons'(X0,X1,X3) != X4) [flattening 81]
83. ? [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (~sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) & sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => (~sorted(sK4,append(sK4,sK7,'Cons'(sK4,sK6,sK5))) & sorted(sK4,sK7) & sorted(sK4,sK5) & list_ge_elem(sK4,sK5,sK6) & list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK7)) [choice axiom]
84. ~sorted(sK4,append(sK4,sK7,'Cons'(sK4,sK6,sK5))) & sorted(sK4,sK7) & sorted(sK4,sK5) & list_ge_elem(sK4,sK5,sK6) & list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK7) [skolemisation 72,83]
85. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : ((list_ge_list(X4,X3,X2) | ~mG0(X4,X1,X3,X0,X2)) & (mG0(X4,X1,X3,X0,X2) | ~list_ge_list(X4,X3,X2))) [nnf transformation 50]
86. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : ((sorted(X3,X2) | ~mG1(X3,X1,X0,X2)) & (mG1(X3,X1,X0,X2) | ~sorted(X3,X2))) [nnf transformation 51]
87. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG2(X4,X2,X1,X0,X3)) & (mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 52]
89. 'Cons'(X0,X3,append(X0,X2,X1)) = mG3(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 63]
90. mG3(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4 [cnf transformation 64]
91. list_ge_elem(X0,X3,X1) | ~mG2(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 78]
92. ~less(X0,X2,X1) | ~mG2(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 78]
93. mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 78]
95. sorted(X0,X2) | ~mG1(X0,X1,X2,X3) | 'Cons'(X0,X1,X2) != X3 [cnf transformation 80]
96. list_ge_elem(X0,X2,X1) | ~mG1(X0,X1,X2,X3) | 'Cons'(X0,X1,X2) != X3 [cnf transformation 80]
97. mG1(X0,X1,X2,X3) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2) | 'Cons'(X0,X1,X2) != X3 [cnf transformation 80]
99. list_ge_list(X0,X2,X3) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X1,X3) != X4 [cnf transformation 82]
100. list_ge_elem(X0,X2,X1) | ~mG0(X0,X1,X2,X3,X4) | 'Cons'(X0,X1,X3) != X4 [cnf transformation 82]
103. list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK7) [cnf transformation 84]
104. list_ge_elem(sK4,sK5,sK6) [cnf transformation 84]
105. sorted(sK4,sK5) [cnf transformation 84]
106. sorted(sK4,sK7) [cnf transformation 84]
107. ~sorted(sK4,append(sK4,sK7,'Cons'(sK4,sK6,sK5))) [cnf transformation 84]
108. mG0(X4,X1,X3,X0,X2) | ~list_ge_list(X4,X3,X2) [cnf transformation 85]
110. mG1(X3,X1,X0,X2) | ~sorted(X3,X2) [cnf transformation 86]
111. ~mG1(X3,X1,X0,X2) | sorted(X3,X2) [cnf transformation 86]
112. mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 87]
113. ~mG2(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 87]
114. append(X4,X3,X2) = mG3(X4,X2,X0,X1,X3) [cnf transformation 53]
121. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 89,114]
122. append(X0,X4,X1) = X1 | 'Nil'(X0) != X4 [definition unfolding 90,114]
123. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 121]
124. append(X0,'Nil'(X0),X1) = X1 [equality resolution 122]
125. mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 93]
126. ~mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 92]
127. ~mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | list_ge_elem(X0,X3,X1) [equality resolution 91]
129. mG1(X0,X1,X2,'Cons'(X0,X1,X2)) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2) [equality resolution 97]
130. ~mG1(X0,X1,X2,'Cons'(X0,X1,X2)) | list_ge_elem(X0,X2,X1) [equality resolution 96]
131. ~mG1(X0,X1,X2,'Cons'(X0,X1,X2)) | sorted(X0,X2) [equality resolution 95]
134. ~mG0(X0,X1,X2,X3,'Cons'(X0,X1,X3)) | list_ge_elem(X0,X2,X1) [equality resolution 100]
135. ~mG0(X0,X1,X2,X3,'Cons'(X0,X1,X3)) | list_ge_list(X0,X2,X3) [equality resolution 99]
147. ! [X0 : sK4,X1 : 'list()'(sK4)] : ((sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Nil'(sK4)) | ~sorted(sK4,'Nil'(sK4))) & ((sorted(sK4,append(sK4,X1,'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X1) | ~sorted(sK4,X1)) => (sorted(sK4,append(sK4,'Cons'(sK4,X0,X1),'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,X0,X1)) | ~sorted(sK4,'Cons'(sK4,X0,X1))))) => ! [X2 : 'list()'(sK4)] : (sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | ~sorted(sK4,X2)) [structural induction hypothesis (one)]
148. ! [X2 : 'list()'(sK4)] : (sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | ~sorted(sK4,X2)) | ? [X0 : sK4,X1 : 'list()'(sK4)] : ((~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) & list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Nil'(sK4)) & sorted(sK4,'Nil'(sK4))) | ((~sorted(sK4,append(sK4,'Cons'(sK4,X0,X1),'Cons'(sK4,sK6,sK5))) & list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,X0,X1)) & sorted(sK4,'Cons'(sK4,X0,X1))) & (sorted(sK4,append(sK4,X1,'Cons'(sK4,sK6,sK5))) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X1) | ~sorted(sK4,X1)))) [ennf transformation 147]
149. sorted(sK4,'Cons'(sK4,sK9,sK10)) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,X2) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) [cnf transformation 148]
150. list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,sK9,sK10)) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,X2) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) [cnf transformation 148]
151. ~sorted(sK4,append(sK4,'Cons'(sK4,sK9,sK10),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,X2) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) [cnf transformation 148]
158. ~sorted(sK4,sK10) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK10) | sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,X2) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),X2) | sorted(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5))) [cnf transformation 148]
177. ~sorted(sK4,sK10) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK10) | sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) [induction hyperresolution 106,103,107,158]
184. ~sorted(sK4,append(sK4,'Cons'(sK4,sK9,sK10),'Cons'(sK4,sK6,sK5))) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) [induction hyperresolution 106,103,107,151]
185. list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,sK9,sK10)) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) [induction hyperresolution 106,103,107,150]
186. sorted(sK4,'Cons'(sK4,sK9,sK10)) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) [induction hyperresolution 106,103,107,149]
229. 2 <=> sorted(sK4,'Cons'(sK4,sK6,sK5)) [avatar definition]
231. ~sorted(sK4,'Cons'(sK4,sK6,sK5)) <- (~2) [avatar component clause 229]
299. ~sorted(sK4,'Cons'(sK4,sK6,sK5)) | sorted(sK4,'Cons'(sK4,sK9,sK10)) [forward demodulation 186,124]
301. 13 <=> sorted(sK4,'Cons'(sK4,sK9,sK10)) [avatar definition]
303. sorted(sK4,'Cons'(sK4,sK9,sK10)) <- (13) [avatar component clause 301]
304. 13 | ~2 [avatar split clause 299,229,301]
305. ~sorted(sK4,'Cons'(sK4,sK6,sK5)) | list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,sK9,sK10)) [forward demodulation 185,124]
307. 14 <=> list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,sK9,sK10)) [avatar definition]
309. list_ge_list(sK4,'Cons'(sK4,sK6,sK5),'Cons'(sK4,sK9,sK10)) <- (14) [avatar component clause 307]
310. 14 | ~2 [avatar split clause 305,229,307]
311. ~sorted(sK4,'Cons'(sK4,sK9,append(sK4,sK10,'Cons'(sK4,sK6,sK5)))) | ~sorted(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5))) [forward demodulation 184,123]
312. ~sorted(sK4,'Cons'(sK4,sK6,sK5)) | ~sorted(sK4,'Cons'(sK4,sK9,append(sK4,sK10,'Cons'(sK4,sK6,sK5)))) [forward demodulation 311,124]
314. 15 <=> sorted(sK4,'Cons'(sK4,sK9,append(sK4,sK10,'Cons'(sK4,sK6,sK5)))) [avatar definition]
316. ~sorted(sK4,'Cons'(sK4,sK9,append(sK4,sK10,'Cons'(sK4,sK6,sK5)))) <- (~15) [avatar component clause 314]
317. ~15 | ~2 [avatar split clause 312,229,314]
322. ~sorted(sK4,'Cons'(sK4,sK6,sK5)) | ~sorted(sK4,sK10) | ~list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK10) | sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) [forward demodulation 177,124]
324. 16 <=> sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) [avatar definition]
326. sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) <- (16) [avatar component clause 324]
328. 17 <=> list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK10) [avatar definition]
332. 18 <=> sorted(sK4,sK10) [avatar definition]
335. 16 | ~17 | ~18 | ~2 [avatar split clause 322,229,332,328,324]
483. ~sorted(X0,'Cons'(X0,X2,X1)) | sorted(X0,X1) [resolution 131,110]
500. ~sorted(X0,'Cons'(X0,X2,X1)) | list_ge_elem(X0,X1,X2) [resolution 130,110]
507. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 126,112]
508. ~list_ge_elem(X0,'Cons'(X0,X3,X1),X2) | list_ge_elem(X0,X1,X2) [resolution 127,112]
509. ~list_ge_list(X0,X1,'Cons'(X0,X2,X3)) | list_ge_elem(X0,X1,X2) [resolution 134,108]
538. ~list_ge_list(X0,X1,'Cons'(X0,X3,X2)) | list_ge_list(X0,X1,X2) [resolution 135,108]
546. sorted(X6,'Cons'(X6,X8,X7)) | ~sorted(X6,X7) | ~list_ge_elem(X6,X7,X8) [resolution 129,111]
574. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 125,113]
599. ~sorted(sK4,sK5) | ~list_ge_elem(sK4,sK5,sK6) <- (~2) [resolution 546,231]
608. ~list_ge_elem(sK4,sK5,sK6) <- (~2) [subsumption resolution 599,105]
609. $false <- (~2) [subsumption resolution 608,104]
610. 2 [avatar contradiction clause 609]
635. list_ge_elem(sK4,sK10,sK9) <- (13) [resolution 303,500]
636. sorted(sK4,sK10) <- (13) [resolution 303,483]
671. 18 | ~13 [avatar split clause 636,301,332]
769. list_ge_list(sK4,'Cons'(sK4,sK6,sK5),sK10) <- (14) [resolution 309,538]
770. list_ge_elem(sK4,'Cons'(sK4,sK6,sK5),sK9) <- (14) [resolution 309,509]
805. 17 | ~14 [avatar split clause 769,307,328]
1222. ~sorted(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5))) | ~list_ge_elem(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5)),sK9) <- (~15) [resolution 316,546]
1287. ~list_ge_elem(sK4,append(sK4,sK10,'Cons'(sK4,sK6,sK5)),sK9) <- (~15, 16) [subsumption resolution 1222,326]
3791. ! [X2 : 'list()'(sK4),X1 : sK4] : (((list_ge_elem(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X2,sK9)) => (list_ge_elem(sK4,append(sK4,'Cons'(sK4,X1,X2),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,'Cons'(sK4,X1,X2),sK9))) & (list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,'Nil'(sK4),sK9))) => ! [X6 : 'list()'(sK4)] : (list_ge_elem(sK4,append(sK4,X6,'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X6,sK9)) [structural induction hypothesis (recursion)]
3792. ! [X6 : 'list()'(sK4)] : (list_ge_elem(sK4,append(sK4,X6,'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X6,sK9)) | ? [X2 : 'list()'(sK4),X1 : sK4] : (((~list_ge_elem(sK4,append(sK4,'Cons'(sK4,X1,X2),'Cons'(sK4,sK6,sK5)),sK9) & list_ge_elem(sK4,'Cons'(sK4,X1,X2),sK9)) & (list_ge_elem(sK4,append(sK4,X2,'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X2,sK9))) | (~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) & list_ge_elem(sK4,'Nil'(sK4),sK9))) [ennf transformation 3791]
3795. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | list_ge_elem(sK4,'Cons'(sK4,sK228,sK227),sK9) | ~list_ge_elem(sK4,X6,sK9) | list_ge_elem(sK4,append(sK4,X6,'Cons'(sK4,sK6,sK5)),sK9) [cnf transformation 3792]
3796. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,append(sK4,'Cons'(sK4,sK228,sK227),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X6,sK9) | list_ge_elem(sK4,append(sK4,X6,'Cons'(sK4,sK6,sK5)),sK9) [cnf transformation 3792]
3798. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,sK227,sK9) | list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,X6,sK9) | list_ge_elem(sK4,append(sK4,X6,'Cons'(sK4,sK6,sK5)),sK9) [cnf transformation 3792]
3805. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,sK227,sK9) | list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) <- (13, ~15, 16) [induction hyperresolution 635,1287,3798]
3807. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | ~list_ge_elem(sK4,append(sK4,'Cons'(sK4,sK228,sK227),'Cons'(sK4,sK6,sK5)),sK9) <- (13, ~15, 16) [induction hyperresolution 635,1287,3796]
3808. ~list_ge_elem(sK4,append(sK4,'Nil'(sK4),'Cons'(sK4,sK6,sK5)),sK9) | list_ge_elem(sK4,'Cons'(sK4,sK228,sK227),sK9) <- (13, ~15, 16) [induction hyperresolution 635,1287,3795]
3849. ~list_ge_elem(sK4,'Cons'(sK4,sK6,sK5),sK9) | list_ge_elem(sK4,'Cons'(sK4,sK228,sK227),sK9) <- (13, ~15, 16) [forward demodulation 3808,124]
3850. list_ge_elem(sK4,'Cons'(sK4,sK228,sK227),sK9) <- (13, 14, ~15, 16) [subsumption resolution 3849,770]
3851. ~list_ge_elem(sK4,'Cons'(sK4,sK6,sK5),sK9) | ~list_ge_elem(sK4,append(sK4,'Cons'(sK4,sK228,sK227),'Cons'(sK4,sK6,sK5)),sK9) <- (13, ~15, 16) [forward demodulation 3807,124]
3852. ~list_ge_elem(sK4,append(sK4,'Cons'(sK4,sK228,sK227),'Cons'(sK4,sK6,sK5)),sK9) <- (13, 14, ~15, 16) [subsumption resolution 3851,770]
3853. ~list_ge_elem(sK4,'Cons'(sK4,sK228,append(sK4,sK227,'Cons'(sK4,sK6,sK5))),sK9) <- (13, 14, ~15, 16) [forward demodulation 3852,123]
3854. ~list_ge_elem(sK4,'Cons'(sK4,sK6,sK5),sK9) | ~list_ge_elem(sK4,sK227,sK9) | list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) <- (13, ~15, 16) [forward demodulation 3805,124]
3855. ~list_ge_elem(sK4,sK227,sK9) | list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) <- (13, 14, ~15, 16) [subsumption resolution 3854,770]
3857. 295 <=> list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) [avatar definition]
3859. list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) <- (295) [avatar component clause 3857]
3861. 296 <=> list_ge_elem(sK4,sK227,sK9) [avatar definition]
3864. 295 | ~296 | ~13 | ~14 | 15 | ~16 [avatar split clause 3855,324,314,307,301,3861,3857]
10463. list_ge_elem(sK4,sK227,sK9) <- (13, 14, ~15, 16) [resolution 3850,508]
10464. ~less(sK4,sK228,sK9) <- (13, 14, ~15, 16) [resolution 3850,507]
10499. 296 | ~13 | ~14 | 15 | ~16 [avatar split clause 10463,324,314,307,301,3861]
23487. ~list_ge_elem(sK4,append(sK4,sK227,'Cons'(sK4,sK6,sK5)),sK9) | less(sK4,sK228,sK9) <- (13, 14, ~15, 16) [resolution 3853,574]
23540. less(sK4,sK228,sK9) <- (13, 14, ~15, 16, 295) [subsumption resolution 23487,3859]
23541. $false <- (13, 14, ~15, 16, 295) [subsumption resolution 23540,10464]
23542. ~13 | ~14 | 15 | ~16 | ~295 [avatar contradiction clause 23541]
23624. $false [avatar sat refutation 304,310,317,335,610,671,805,3864,10499,23542]
% SZS output end Proof for lemma1
% (49684)------------------------------
% (49684)Version: Vampire 4.7 (commit )
% (49684)Linked with Z3 4.9.1.0  NOTFOUND
% (49684)Termination reason: Refutation

% (49684)Memory used [KB]: 18421
% (49684)Time elapsed: 0.383 s
% (49684)------------------------------
% (49684)------------------------------
% (49671)Success in time 0.374 s
