% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma2
% SZS output start Proof for lemma2
7. filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [input]
9. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
13. ! [X0 : $tType] : ! [X2 : 'list()'(X0),X1 : X0] : (list_ge_elem(X0,X2,X1) => list_ge_elem(X0,quicksort(X0,X2),X1)) [input]
14. ! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [input]
15. ~! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [negated conjecture 14]
30. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 9]
31. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG2(X0,X2,X3,X4,X1) <=> $true)) [fool $match elimination 30]
32. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG2(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 30]
33. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG2(X0,X2,X3,X4,X1)) [fool elimination 30]
50. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [closure 7]
51. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG7(X0,X1,X3,X4,X2)) [fool $match elimination 50]
52. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~less(X0,X3,X1) => 'Cons'(X0,X3,filter_ge(X0,X1,X4)) = iG8(X0,X1,X3,X4)) [fool $ite elimination 50]
53. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~~less(X0,X3,X1) => filter_ge(X0,X1,X4) = iG8(X0,X1,X3,X4)) [fool $ite elimination 50]
54. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG7(X0,X1,X3,X4,X2) = iG8(X0,X1,X3,X4)) [fool $match elimination 50]
55. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = mG7(X0,X1,X3,X4,X2) [fool elimination 50]
56. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => mG7(X0,X1,X2,X3,X4) = iG8(X0,X1,X2,X3)) [rectify 54]
57. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~~less(X0,X2,X1) => iG8(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [rectify 53]
58. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (less(X0,X2,X1) => iG8(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [flattening 57]
59. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG8(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [rectify 52]
60. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG8(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [flattening 59]
61. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG7(X0,X1,X2,X3,X4)) [rectify 51]
71. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 32]
72. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 71]
73. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => (mG2(X0,X1,X2,X3,X4) <=> $true)) [rectify 31]
74. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG2(X0,X1,X2,X3,X4)) [true and false elimination 73]
81. ~! [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [flattening 15]
84. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG2(X4,X2,X1,X0,X3)) [rectify 33]
90. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_ge(X4,X3,X2) = mG7(X4,X3,X1,X0,X2) [rectify 55]
94. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [rectify 13]
95. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [flattening 94]
100. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG7(X0,X1,X2,X3,X4) = iG8(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 56]
101. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG8(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1)) [ennf transformation 58]
102. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG8(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1)) [ennf transformation 60]
103. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG7(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 61]
112. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG2(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 72]
113. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 74]
118. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) [ennf transformation 81]
119. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2)) [ennf transformation 95]
124. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 112]
125. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG2(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 124]
130. ? [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) => ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [choice axiom]
131. ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [skolemisation 118,130]
134. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG2(X4,X2,X1,X0,X3)) & (mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 84]
136. mG7(X0,X1,X2,X3,X4) = iG8(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 100]
137. iG8(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1) [cnf transformation 101]
138. iG8(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1) [cnf transformation 102]
139. 'Nil'(X0) = mG7(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 103]
149. ~less(X0,X2,X1) | ~mG2(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 125]
150. mG2(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 125]
151. mG2(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 113]
160. ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK10,sK11)),sK10) [cnf transformation 131]
165. mG2(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 134]
166. ~mG2(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 134]
172. filter_ge(X4,X3,X2) = mG7(X4,X3,X1,X0,X2) [cnf transformation 90]
175. list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2) [cnf transformation 119]
178. filter_ge(X0,X1,X4) = iG8(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [definition unfolding 136,172]
179. 'Nil'(X0) = filter_ge(X0,X1,X4) | 'Nil'(X0) != X4 [definition unfolding 139,172]
186. iG8(X0,X1,X2,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [equality resolution 178]
187. 'Nil'(X0) = filter_ge(X0,X1,'Nil'(X0)) [equality resolution 179]
194. mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 150]
195. ~mG2(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 149]
197. mG2(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 151]
206. ~less(X0,X2,X1) | filter_ge(X0,X1,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 137,186]
207. less(X0,X2,X1) | 'Cons'(X0,X2,filter_ge(X0,X1,X3)) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 138,186]
246. list_ge_elem(X0,'Nil'(X0),X1) [resolution 166,197]
250. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK11),sK10) [resolution 175,160]
252. ! [X0 : sK9,X1 : 'list()'(sK9)] : (list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) & (list_ge_elem(sK9,filter_ge(sK9,sK10,X1),sK10) => list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,X0,X1)),sK10))) => ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [structural induction hypothesis (one)]
253. ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) | ? [X0 : sK9,X1 : 'list()'(sK9)] : (~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | (~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,X0,X1)),sK10) & list_ge_elem(sK9,filter_ge(sK9,sK10,X1),sK10))) [ennf transformation 252]
254. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [cnf transformation 253]
255. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,X2),sK10) [cnf transformation 253]
256. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) [induction hyperresolution 250,255]
257. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Nil'(sK9)),sK10) [induction hyperresolution 250,254]
258. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) [forward demodulation 257,187]
259. list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) [subsumption resolution 258,246]
260. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) [forward demodulation 256,187]
261. ~list_ge_elem(sK9,filter_ge(sK9,sK10,'Cons'(sK9,sK15,sK16)),sK10) [subsumption resolution 260,246]
330. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 195,165]
419. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 194,166]
478. 'Cons'(X8,X9,filter_ge(X8,X10,X11)) = filter_ge(X8,X10,'Cons'(X8,X9,X11)) | filter_ge(X8,X10,X12) = filter_ge(X8,X10,'Cons'(X8,X9,X12)) [resolution 207,206]
634. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) [superposition 261,478]
644. 22 <=> ! [X0 : 'list()'(sK9)] : filter_ge(sK9,sK10,X0) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) [avatar definition]
645. filter_ge(sK9,sK10,X0) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) <- (22) [avatar component clause 644]
647. 23 <=> list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) [avatar definition]
649. ~list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) <- (~23) [avatar component clause 647]
653. 24 <=> list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) [avatar definition]
654. list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) <- (24) [avatar component clause 653]
655. ~list_ge_elem(sK9,'Cons'(sK9,sK15,'Nil'(sK9)),sK10) <- (~24) [avatar component clause 653]
684. filter_ge(sK9,sK10,'Cons'(sK9,sK15,X0)) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) [subsumption resolution 634,259]
685. ~list_ge_elem(sK9,'Cons'(sK9,sK15,filter_ge(sK9,sK10,sK16)),sK10) [backward demodulation 261,684]
687. ~23 [avatar split clause 685,647]
731. ~list_ge_elem(sK9,'Nil'(sK9),sK10) | less(sK9,sK15,sK10) <- (~24) [resolution 655,419]
732. less(sK9,sK15,sK10) <- (~24) [subsumption resolution 731,246]
789. filter_ge(sK9,sK10,X4) = filter_ge(sK9,sK10,'Cons'(sK9,sK15,X4)) <- (~24) [resolution 732,206]
792. 22 | 24 [avatar split clause 789,653,644]
793. filter_ge(sK9,sK10,X0) = 'Cons'(sK9,sK15,filter_ge(sK9,sK10,X0)) <- (22) [backward demodulation 684,645]
794. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) <- (22, ~23) [backward demodulation 649,793]
795. $false <- (22, ~23) [subsumption resolution 794,259]
796. ~22 | 23 [avatar contradiction clause 795]
802. ~less(sK9,sK15,sK10) <- (24) [resolution 654,330]
1959. ~list_ge_elem(sK9,filter_ge(sK9,sK10,sK16),sK10) | less(sK9,sK15,sK10) <- (~23) [resolution 649,419]
1966. less(sK9,sK15,sK10) <- (~23) [subsumption resolution 1959,259]
1967. $false <- (~23, 24) [subsumption resolution 1966,802]
1968. 23 | ~24 [avatar contradiction clause 1967]
1973. $false [avatar sat refutation 687,792,796,1968]
% SZS output end Proof for lemma2
% ------------------------------
% Version: Vampire 4.7 (commit )
% Linked with Z3 4.9.1.0  NOTFOUND
% Termination reason: Refutation

% Memory used [KB]: 6524
% Time elapsed: 0.074 s
% ------------------------------
% ------------------------------
