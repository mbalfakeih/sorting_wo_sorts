% (48624)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (48626)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (48628)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (48625)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (48627)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (48633)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (48634)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (48637)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (48629)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (48635)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (48632)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (48630)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (48636)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (48631)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (48625)First to succeed.
% (48625)Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for conjecture
% SZS output start Proof for conjecture
7. filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [input]
8. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
9. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
10. (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [input]
11. quicksort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3))))) [input]
13. ! [X0 : $tType] : ! [X3 : 'list()'(X0),X1 : X0,X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X3) & list_ge_elem(X0,X3,X1) & list_ge_list(X0,'Cons'(X0,X1,X3),X2)) => sorted(X0,append(X0,X2,'Cons'(X0,X1,X3)))) [input]
14. ! [X0 : $tType] : ! [X1 : X0,X2 : 'list()'(X0)] : list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [input]
15. ! [X0 : $tType] : ! [X2 : 'list()'(X0),X1 : X0] : (list_ge_elem(X0,X2,X1) => list_ge_elem(X0,quicksort(X0,X2),X1)) [input]
17. ! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [input]
18. ~! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [negated conjecture 17]
19. 'Cons'(X1,head(X1,X0),tail(X1,X0)) = X0 | 'Nil'(X1) = X0 [term algebras exhaustiveness]
20. 'Nil'(X0) != 'Cons'(X0,X1,X2) [term algebras distinctness]
21. 'Cons'(X0,X2,X4) != 'Cons'(X0,X3,X5) | X2 = X3 [term algebras injectivity]
29. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : quicksort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3))))) [closure 11]
30. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => 'Nil'(X0) = mG1(X0,X3,X2,X1)) [fool $match elimination 29]
31. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => append(X0,quicksort(X0,filter_less(X0,X2,X3)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X3)))) = mG1(X0,X3,X2,X1)) [fool $match elimination 29]
32. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : quicksort(X0,X1) = mG1(X0,X3,X2,X1) [fool elimination 29]
33. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [closure 10]
34. ! [X0 : $tType,X2 : X0,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG2(X0,X2,X3,X1) <=> $true)) [fool $match elimination 33]
36. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) <=> mG2(X0,X2,X3,X1)) [fool elimination 33]
37. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 9]
38. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG3(X0,X2,X3,X4,X1) <=> $true)) [fool $match elimination 37]
39. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => (mG3(X0,X2,X3,X4,X1) <=> (~less(X0,X3,X2) & list_ge_elem(X0,X4,X2)))) [fool $match elimination 37]
40. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG3(X0,X2,X3,X4,X1)) [fool elimination 37]
41. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 8]
43. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG4(X0,X2,X4,X3,X1)) [fool $match elimination 41]
44. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG4(X0,X2,X4,X3,X1) [fool elimination 41]
45. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(~less(X0,X3,X1), 'Cons'(X0,X3,filter_ge(X0,X1,X4)),filter_ge(X0,X1,X4))) [closure 7]
46. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG5(X0,X1,X3,X4,X2)) [fool $match elimination 45]
47. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~less(X0,X3,X1) => 'Cons'(X0,X3,filter_ge(X0,X1,X4)) = iG6(X0,X1,X3,X4)) [fool $ite elimination 45]
48. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0)] : (~~less(X0,X3,X1) => filter_ge(X0,X1,X4) = iG6(X0,X1,X3,X4)) [fool $ite elimination 45]
49. ! [X0 : $tType,X1 : X0,X3 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG5(X0,X1,X3,X4,X2) = iG6(X0,X1,X3,X4)) [fool $match elimination 45]
50. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_ge(X0,X1,X2) = mG5(X0,X1,X3,X4,X2) [fool elimination 45]
64. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => mG5(X0,X1,X2,X3,X4) = iG6(X0,X1,X2,X3)) [rectify 49]
65. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~~less(X0,X2,X1) => iG6(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [rectify 48]
66. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (less(X0,X2,X1) => iG6(X0,X1,X2,X3) = filter_ge(X0,X1,X3)) [flattening 65]
67. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG6(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [rectify 47]
68. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~less(X0,X2,X1) => iG6(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3))) [flattening 67]
69. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG5(X0,X1,X2,X3,X4)) [rectify 46]
70. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG4(X0,X1,X2,X3,X4)) [rectify 43]
72. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG3(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [rectify 39]
73. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X4 => (mG3(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)))) [flattening 72]
74. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => (mG3(X0,X1,X2,X3,X4) <=> $true)) [rectify 38]
75. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG3(X0,X1,X2,X3,X4)) [true and false elimination 74]
77. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => (mG2(X0,X1,X2,X3) <=> $true)) [rectify 34]
78. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => mG2(X0,X1,X2,X3)) [true and false elimination 77]
79. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Cons'(X0,X2,X1) = X3 => append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG1(X0,X1,X2,X3)) [rectify 31]
80. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => 'Nil'(X0) = mG1(X0,X1,X2,X3)) [rectify 30]
84. ~! [X0 : $tType,X1 : 'list()'(X0)] : sorted(X0,quicksort(X0,X1)) [flattening 18]
87. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [rectify 15]
88. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,X1,X2) => list_ge_elem(X0,quicksort(X0,X1),X2)) [flattening 87]
89. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0)] : list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [flattening 14]
90. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [rectify 13]
91. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ((sorted(X0,X3) & sorted(X0,X1) & list_ge_elem(X0,X1,X2) & list_ge_list(X0,'Cons'(X0,X2,X1),X3)) => sorted(X0,append(X0,X3,'Cons'(X0,X2,X1)))) [flattening 90]
93. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : quicksort(X3,X2) = mG1(X3,X0,X1,X2) [rectify 32]
94. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : (sorted(X3,X2) <=> mG2(X3,X1,X0,X2)) [rectify 36]
95. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG3(X4,X2,X1,X0,X3)) [rectify 40]
96. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG4(X4,X2,X0,X1,X3) [rectify 44]
97. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_ge(X4,X3,X2) = mG5(X4,X3,X1,X0,X2) [rectify 50]
112. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG5(X0,X1,X2,X3,X4) = iG6(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 64]
113. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG6(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1)) [ennf transformation 66]
114. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG6(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1)) [ennf transformation 68]
115. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 69]
116. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG4(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 70]
118. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ((mG3(X0,X1,X2,X3,X4) <=> (~less(X0,X2,X1) & list_ge_elem(X0,X3,X1))) | 'Cons'(X0,X2,X3) != X4) [ennf transformation 73]
119. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG3(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 75]
121. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (mG2(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 78]
122. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG1(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3) [ennf transformation 79]
123. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Nil'(X0) = mG1(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 80]
126. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,quicksort(X0,X1)) [ennf transformation 84]
128. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0] : (list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2)) [ennf transformation 88]
129. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) | (~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | ~list_ge_list(X0,'Cons'(X0,X2,X1),X3))) [ennf transformation 91]
130. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) | ~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | ~list_ge_list(X0,'Cons'(X0,X2,X1),X3)) [flattening 129]
135. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG3(X0,X1,X2,X3,X4) | (less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1))) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG3(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [nnf transformation 118]
136. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (((mG3(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1)) & ((~less(X0,X2,X1) & list_ge_elem(X0,X3,X1)) | ~mG3(X0,X1,X2,X3,X4))) | 'Cons'(X0,X2,X3) != X4) [flattening 135]
141. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,quicksort(X0,X1)) => ~sorted(sK9,quicksort(sK9,sK10)) [choice axiom]
142. ~sorted(sK9,quicksort(sK9,sK10)) [skolemisation 126,141]
145. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : ((sorted(X3,X2) | ~mG2(X3,X1,X0,X2)) & (mG2(X3,X1,X0,X2) | ~sorted(X3,X2))) [nnf transformation 94]
146. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG3(X4,X2,X1,X0,X3)) & (mG3(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 95]
152. mG5(X0,X1,X2,X3,X4) = iG6(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 112]
153. iG6(X0,X1,X2,X3) = filter_ge(X0,X1,X3) | ~less(X0,X2,X1) [cnf transformation 113]
154. iG6(X0,X1,X2,X3) = 'Cons'(X0,X2,filter_ge(X0,X1,X3)) | less(X0,X2,X1) [cnf transformation 114]
155. 'Nil'(X0) = mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 115]
156. 'Cons'(X0,X3,append(X0,X2,X1)) = mG4(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 116]
159. ~less(X0,X2,X1) | ~mG3(X0,X1,X2,X3,X4) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 136]
160. mG3(X0,X1,X2,X3,X4) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) | 'Cons'(X0,X2,X3) != X4 [cnf transformation 136]
161. mG3(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 119]
165. mG2(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 121]
166. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = mG1(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3 [cnf transformation 122]
167. 'Nil'(X0) = mG1(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 123]
172. ~sorted(sK9,quicksort(sK9,sK10)) [cnf transformation 142]
174. list_ge_elem(X0,quicksort(X0,X1),X2) | ~list_ge_elem(X0,X1,X2) [cnf transformation 128]
175. list_ge_list(X0,'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))),quicksort(X0,filter_less(X0,X1,X2))) [cnf transformation 89]
176. ~list_ge_list(X0,'Cons'(X0,X2,X1),X3) | ~sorted(X0,X3) | ~sorted(X0,X1) | ~list_ge_elem(X0,X1,X2) | sorted(X0,append(X0,X3,'Cons'(X0,X2,X1))) [cnf transformation 130]
179. quicksort(X3,X2) = mG1(X3,X0,X1,X2) [cnf transformation 93]
181. ~mG2(X3,X1,X0,X2) | sorted(X3,X2) [cnf transformation 145]
182. mG3(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2) [cnf transformation 146]
183. ~mG3(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 146]
184. append(X4,X3,X2) = mG4(X4,X2,X0,X1,X3) [cnf transformation 96]
185. filter_ge(X4,X3,X2) = mG5(X4,X3,X1,X0,X2) [cnf transformation 97]
195. filter_ge(X0,X1,X4) = iG6(X0,X1,X2,X3) | 'Cons'(X0,X2,X3) != X4 [definition unfolding 152,185]
196. 'Nil'(X0) = filter_ge(X0,X1,X4) | 'Nil'(X0) != X4 [definition unfolding 155,185]
197. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 156,184]
199. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = quicksort(X0,X3) | 'Cons'(X0,X2,X1) != X3 [definition unfolding 166,179]
200. 'Nil'(X0) = quicksort(X0,X3) | 'Nil'(X0) != X3 [definition unfolding 167,179]
203. iG6(X0,X1,X2,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [equality resolution 195]
204. 'Nil'(X0) = filter_ge(X0,X1,'Nil'(X0)) [equality resolution 196]
205. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 197]
207. mG3(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | less(X0,X2,X1) | ~list_ge_elem(X0,X3,X1) [equality resolution 160]
208. ~mG3(X0,X1,X2,X3,'Cons'(X0,X2,X3)) | ~less(X0,X2,X1) [equality resolution 159]
210. mG3(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 161]
214. mG2(X0,X1,X2,'Nil'(X0)) [equality resolution 165]
215. append(X0,quicksort(X0,filter_less(X0,X2,X1)),'Cons'(X0,X2,quicksort(X0,filter_ge(X0,X2,X1)))) = quicksort(X0,'Cons'(X0,X2,X1)) [equality resolution 199]
216. 'Nil'(X0) = quicksort(X0,'Nil'(X0)) [equality resolution 200]
223. ~less(X0,X2,X1) | filter_ge(X0,X1,X3) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 153,203]
224. less(X0,X2,X1) | 'Cons'(X0,X2,filter_ge(X0,X1,X3)) = filter_ge(X0,X1,'Cons'(X0,X2,X3)) [forward demodulation 154,203]
229. ! [X2 : 'list()'(sK9),X1 : sK9] : (((sorted(sK9,quicksort(sK9,filter_ge(sK9,X1,X2))) & sorted(sK9,quicksort(sK9,filter_less(sK9,X1,X2)))) => sorted(sK9,quicksort(sK9,'Cons'(sK9,X1,X2)))) & sorted(sK9,quicksort(sK9,'Nil'(sK9)))) => ! [X4 : 'list()'(sK9)] : sorted(sK9,quicksort(sK9,X4)) [structural induction hypothesis (recursion)]
230. ! [X4 : 'list()'(sK9)] : sorted(sK9,quicksort(sK9,X4)) | ? [X2 : 'list()'(sK9),X1 : sK9] : ((~sorted(sK9,quicksort(sK9,'Cons'(sK9,X1,X2))) & (sorted(sK9,quicksort(sK9,filter_ge(sK9,X1,X2))) & sorted(sK9,quicksort(sK9,filter_less(sK9,X1,X2))))) | ~sorted(sK9,quicksort(sK9,'Nil'(sK9)))) [ennf transformation 229]
231. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
232. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
233. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) | sorted(sK9,quicksort(sK9,X4)) [cnf transformation 230]
236. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [induction hyperresolution 172,233]
237. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [induction hyperresolution 172,232]
238. ~sorted(sK9,quicksort(sK9,'Nil'(sK9))) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [induction hyperresolution 172,231]
239. ~sorted(sK9,'Nil'(sK9)) | sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [forward demodulation 238,216]
241. 1 <=> sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) [avatar definition]
243. sorted(sK9,quicksort(sK9,filter_less(sK9,sK15,sK14))) <- (1) [avatar component clause 241]
245. 2 <=> sorted(sK9,'Nil'(sK9)) [avatar definition]
247. ~sorted(sK9,'Nil'(sK9)) <- (~2) [avatar component clause 245]
248. 1 | ~2 [avatar split clause 239,245,241]
249. ~sorted(sK9,'Nil'(sK9)) | sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [forward demodulation 237,216]
251. 3 <=> sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) [avatar definition]
253. sorted(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14))) <- (3) [avatar component clause 251]
254. 3 | ~2 [avatar split clause 249,245,251]
255. ~sorted(sK9,'Nil'(sK9)) | ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [forward demodulation 236,216]
257. 4 <=> sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) [avatar definition]
259. ~sorted(sK9,quicksort(sK9,'Cons'(sK9,sK15,sK14))) <- (~4) [avatar component clause 257]
260. ~4 | ~2 [avatar split clause 255,245,257]
279. ~mG2(sK9,X0,X1,'Nil'(sK9)) <- (~2) [unit resulting resolution 247,181]
285. $false <- (~2) [subsumption resolution 279,214]
286. 2 [avatar contradiction clause 285]
383. list_ge_elem(X0,'Nil'(X0),X1) [unit resulting resolution 210,183]
418. ~list_ge_elem(X0,'Cons'(X0,X1,X3),X2) | ~less(X0,X1,X2) [resolution 208,182]
480. ~less(X40,head(X40,X41),X42) | ~list_ge_elem(X40,X41,X42) | 'Nil'(X40) = X41 [superposition 418,19]
496. append(X0,X1,X2) = 'Cons'(X0,head(X0,X1),append(X0,tail(X0,X1),X2)) | 'Nil'(X0) = X1 [superposition 205,19]
501. list_ge_elem(X8,'Cons'(X8,X9,X11),X10) | ~list_ge_elem(X8,X11,X10) | less(X8,X9,X10) [resolution 207,183]
551. 'Cons'(X8,X9,filter_ge(X8,X10,X11)) = filter_ge(X8,X10,'Cons'(X8,X9,X11)) | filter_ge(X8,X10,X12) = filter_ge(X8,X10,'Cons'(X8,X9,X12)) [resolution 224,223]
564. ~sorted(X0,quicksort(X0,filter_less(X0,X1,X2))) | ~sorted(X0,quicksort(X0,filter_ge(X0,X1,X2))) | ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) | sorted(X0,append(X0,quicksort(X0,filter_less(X0,X1,X2)),'Cons'(X0,X1,quicksort(X0,filter_ge(X0,X1,X2))))) [resolution 176,175]
570. ~list_ge_elem(X0,quicksort(X0,filter_ge(X0,X1,X2)),X1) | ~sorted(X0,quicksort(X0,filter_less(X0,X1,X2))) | ~sorted(X0,quicksort(X0,filter_ge(X0,X1,X2))) | sorted(X0,quicksort(X0,'Cons'(X0,X1,X2))) [forward demodulation 564,215]
1104. append(X3,X4,X5) != 'Cons'(X3,X6,X7) | head(X3,X4) = X6 | 'Nil'(X3) = X4 [superposition 21,496]
1431. ~list_ge_elem(sK9,quicksort(sK9,filter_ge(sK9,sK15,sK14)),sK15) <- (1, 3, ~4) [unit resulting resolution 259,243,253,570]
1458. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK14),sK15) <- (1, 3, ~4) [unit resulting resolution 1431,174]
1491. ! [X0 : sK9,X1 : 'list()'(sK9)] : (list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) & (list_ge_elem(sK9,filter_ge(sK9,sK15,X1),sK15) => list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,X0,X1)),sK15))) => ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [structural induction hypothesis (one)]
1492. ! [X2 : 'list()'(sK9)] : list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) | ? [X0 : sK9,X1 : 'list()'(sK9)] : (~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | (~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,X0,X1)),sK15) & list_ge_elem(sK9,filter_ge(sK9,sK15,X1),sK15))) [ennf transformation 1491]
1493. list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [cnf transformation 1492]
1494. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK38,sK39)),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,X2),sK15) [cnf transformation 1492]
1495. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK38,sK39)),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) <- (1, 3, ~4) [induction hyperresolution 1458,1494]
1496. list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Nil'(sK9)),sK15) <- (1, 3, ~4) [induction hyperresolution 1458,1493]
1497. ~list_ge_elem(sK9,'Nil'(sK9),sK15) | list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) <- (1, 3, ~4) [forward demodulation 1496,204]
1498. list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) <- (1, 3, ~4) [subsumption resolution 1497,383]
1499. ~list_ge_elem(sK9,'Nil'(sK9),sK15) | ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK38,sK39)),sK15) <- (1, 3, ~4) [forward demodulation 1495,204]
1500. ~list_ge_elem(sK9,filter_ge(sK9,sK15,'Cons'(sK9,sK38,sK39)),sK15) <- (1, 3, ~4) [subsumption resolution 1499,383]
1508. mG3(sK9,sK15,X0,X1,filter_ge(sK9,sK15,sK39)) <- (1, 3, ~4) [unit resulting resolution 1498,182]
2411. head(X0,'Cons'(X0,X1,X2)) = X1 [unit resulting resolution 20,205,1104]
3195. ~mG3(sK9,sK15,X0,X1,filter_ge(sK9,sK15,'Cons'(sK9,sK38,sK39))) <- (1, 3, ~4) [unit resulting resolution 1500,183]
3203. ~list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) | 'Cons'(sK9,sK38,filter_ge(sK9,sK15,X1)) = filter_ge(sK9,sK15,'Cons'(sK9,sK38,X1)) <- (1, 3, ~4) [superposition 1500,551]
3217. 95 <=> list_ge_elem(sK9,'Cons'(sK9,sK38,'Nil'(sK9)),sK15) [avatar definition]
3218. list_ge_elem(sK9,'Cons'(sK9,sK38,'Nil'(sK9)),sK15) <- (95) [avatar component clause 3217]
3219. ~list_ge_elem(sK9,'Cons'(sK9,sK38,'Nil'(sK9)),sK15) <- (~95) [avatar component clause 3217]
3276. less(sK9,sK38,sK15) <- (~95) [unit resulting resolution 383,3219,501]
3287. filter_ge(sK9,sK15,X0) = filter_ge(sK9,sK15,'Cons'(sK9,sK38,X0)) <- (~95) [unit resulting resolution 3276,223]
3313. 100 <=> list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) [avatar definition]
3314. list_ge_elem(sK9,filter_ge(sK9,sK15,sK39),sK15) <- (100) [avatar component clause 3313]
3323. ~mG3(sK9,sK15,X0,X1,filter_ge(sK9,sK15,sK39)) <- (1, 3, ~4, ~95) [forward demodulation 3195,3287]
3350. $false <- (1, 3, ~4, ~95) [subsumption resolution 1508,3323]
3351. ~1 | ~3 | 4 | 95 [avatar contradiction clause 3350]
3352. 100 | ~1 | ~3 | 4 [avatar split clause 1498,257,251,241,3313]
3361. 103 <=> ! [X1 : 'list()'(sK9)] : 'Cons'(sK9,sK38,filter_ge(sK9,sK15,X1)) = filter_ge(sK9,sK15,'Cons'(sK9,sK38,X1)) [avatar definition]
3362. 'Cons'(sK9,sK38,filter_ge(sK9,sK15,X1)) = filter_ge(sK9,sK15,'Cons'(sK9,sK38,X1)) <- (103) [avatar component clause 3361]
3363. 103 | ~100 | ~1 | ~3 | 4 [avatar split clause 3203,257,251,241,3313,3361]
3553. ~mG3(sK9,sK15,X0,X1,'Cons'(sK9,sK38,filter_ge(sK9,sK15,sK39))) <- (1, 3, ~4, 103) [forward demodulation 3195,3362]
3775. ~less(sK9,head(sK9,'Cons'(sK9,sK38,'Nil'(sK9))),sK15) <- (95) [unit resulting resolution 20,3218,480]
3783. ~less(sK9,sK38,sK15) <- (95) [forward demodulation 3775,2411]
3797. mG3(sK9,sK15,sK38,filter_ge(sK9,sK15,sK39),'Cons'(sK9,sK38,filter_ge(sK9,sK15,sK39))) <- (95, 100) [unit resulting resolution 3314,3783,207]
3818. $false <- (1, 3, ~4, 95, 100, 103) [subsumption resolution 3797,3553]
3819. ~1 | ~3 | 4 | ~95 | ~100 | ~103 [avatar contradiction clause 3818]
3830. $false [avatar sat refutation 248,254,260,286,3351,3352,3363,3819]
% SZS output end Proof for conjecture
% (48625)------------------------------
% (48625)Version: Vampire 4.7 (commit )
% (48625)Linked with Z3 4.9.1.0  NOTFOUND
% (48625)Termination reason: Refutation

% (48625)Memory used [KB]: 8059
% (48625)Time elapsed: 0.106 s
% (48625)------------------------------
% (48625)------------------------------
% (48623)Success in time 0.096 s
