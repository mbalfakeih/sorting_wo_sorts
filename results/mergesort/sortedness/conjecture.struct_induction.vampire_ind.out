% (45079)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (45080)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (45081)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (45085)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (45084)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (45083)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (45082)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (45086)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (45090)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=on_89 on conjecture for (89ds/0Mi)
% (45087)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (45091)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=off_89 on conjecture for (89ds/0Mi)
% (45089)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=off_89 on conjecture for (89ds/0Mi)
% (45088)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (45092)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=on_89 on conjecture for (89ds/0Mi)
% (45088)First to succeed.
% (45088)Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for conjecture
% SZS output start Proof for conjecture
6. (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [input]
7. (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [input]
8. len(X0,X1) = $match(X1,'Nil'(X0),zero,'Cons'(X0,X2,X3),s(len(X0,X3))) [input]
11. take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [input]
12. drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [input]
13. mergesort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),$ite('Nil'(X0) = X3, X1,merge(X0,mergesort(X0,take(X0,div2(len(X0,X1)),X1)),mergesort(X0,drop(X0,div2(len(X0,X1)),X1))))) [input]
14. ! [X0 : $tType] : ! [X2 : 'list()'(X0),X1 : 'list()'(X0)] : ((sorted(X0,X1) & sorted(X0,X2)) => sorted(X0,merge(X0,X1,X2))) [input]
15. ! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,mergesort(X0,X1)) [input]
16. ~! [X0 : $tType] : ! [X1 : 'list()'(X0)] : sorted(X0,mergesort(X0,X1)) [negated conjecture 15]
21. s(s_0(X0)) = X0 | zero = X0 [term algebras exhaustiveness]
26. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : mergesort(X0,X1) = $match(X1,'Nil'(X0),'Nil'(X0),'Cons'(X0,X2,X3),$ite('Nil'(X0) = X3, X1,merge(X0,mergesort(X0,take(X0,div2(len(X0,X1)),X1)),mergesort(X0,drop(X0,div2(len(X0,X1)),X1))))) [closure 13]
27. ! [X0 : $tType,X3 : 'list()'(X0),X1 : 'list()'(X0),X2 : X0] : ('Nil'(X0) = X1 => 'Nil'(X0) = mG0(X0,X3,X1,X2)) [fool $match elimination 26]
28. ! [X0 : $tType,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X3 => iG1(X0,X3,X1) = X1) [fool $ite elimination 26]
29. ! [X0 : $tType,X3 : 'list()'(X0),X1 : 'list()'(X0)] : (~'Nil'(X0) = X3 => merge(X0,mergesort(X0,take(X0,div2(len(X0,X1)),X1)),mergesort(X0,drop(X0,div2(len(X0,X1)),X1))) = iG1(X0,X3,X1)) [fool $ite elimination 26]
30. ! [X0 : $tType,X3 : 'list()'(X0),X1 : 'list()'(X0),X2 : X0] : ('Cons'(X0,X2,X3) = X1 => mG0(X0,X3,X1,X2) = iG1(X0,X3,X1)) [fool $match elimination 26]
31. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : mergesort(X0,X1) = mG0(X0,X3,X1,X2) [fool elimination 26]
32. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [closure 12]
33. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (zero = X1 => mG2(X0,X5,X3,X4,X2,X1) = X2) [fool $match elimination 32]
35. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => drop(X0,X3,X5) = mG3(X0,X5,X3,X4,X2)) [fool $match elimination 32]
36. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG2(X0,X5,X3,X4,X2,X1) = mG3(X0,X5,X3,X4,X2)) [fool $match elimination 32]
37. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = mG2(X0,X5,X3,X4,X2,X1) [fool elimination 32]
38. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [closure 11]
41. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => 'Cons'(X0,X4,take(X0,X3,X5)) = mG5(X0,X5,X3,X4,X2)) [fool $match elimination 38]
42. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG4(X0,X5,X3,X4,X2,X1) = mG5(X0,X5,X3,X4,X2)) [fool $match elimination 38]
43. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = mG4(X0,X5,X3,X4,X2,X1) [fool elimination 38]
58. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : len(X0,X1) = $match(X1,'Nil'(X0),zero,'Cons'(X0,X2,X3),s(len(X0,X3))) [closure 8]
60. ! [X0 : $tType,X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => s(len(X0,X3)) = mG11(X0,X3,X2,X1)) [fool $match elimination 58]
61. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : len(X0,X1) = mG11(X0,X3,X2,X1) [fool elimination 58]
62. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X2,X3),list_ge_elem(X0,X3,X2) & sorted(X0,X3))) [closure 7]
63. ! [X0 : $tType,X2 : X0,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG12(X0,X2,X3,X1) <=> $true)) [fool $match elimination 62]
64. ! [X0 : $tType,X2 : X0,X3 : 'list()'(X0),X1 : 'list()'(X0)] : ('Cons'(X0,X2,X3) = X1 => (mG12(X0,X2,X3,X1) <=> (list_ge_elem(X0,X3,X2) & sorted(X0,X3)))) [fool $match elimination 62]
65. ! [X3 : 'list()'(X0),X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (sorted(X0,X1) <=> mG12(X0,X2,X3,X1)) [fool elimination 62]
66. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) = $match(X1,'Nil'(X0),$true,'Cons'(X0,X3,X4),~less(X0,X3,X2) & list_ge_elem(X0,X4,X2))) [closure 6]
67. ! [X0 : $tType,X2 : X0,X3 : X0,X4 : 'list()'(X0),X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => (mG13(X0,X2,X3,X4,X1) <=> $true)) [fool $match elimination 66]
69. ! [X4 : 'list()'(X0),X3 : X0,X2 : X0,X1 : 'list()'(X0),X0 : $tType] : (list_ge_elem(X0,X1,X2) <=> mG13(X0,X2,X3,X4,X1)) [fool elimination 66]
74. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => (mG13(X0,X1,X2,X3,X4) <=> $true)) [rectify 67]
75. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG13(X0,X1,X2,X3,X4)) [true and false elimination 74]
76. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Cons'(X0,X1,X2) = X3 => (mG12(X0,X1,X2,X3) <=> (list_ge_elem(X0,X2,X1) & sorted(X0,X2)))) [rectify 64]
77. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => (mG12(X0,X1,X2,X3) <=> $true)) [rectify 63]
78. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ('Nil'(X0) = X3 => mG12(X0,X1,X2,X3)) [true and false elimination 77]
79. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : ('Cons'(X0,X2,X1) = X3 => s(len(X0,X1)) = mG11(X0,X1,X2,X3)) [rectify 60]
92. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4)) [rectify 42]
93. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1))) [rectify 41]
96. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4)) [rectify 36]
97. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1)) [rectify 35]
99. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (zero = X5 => mG2(X0,X1,X2,X3,X4,X5) = X4) [rectify 33]
100. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0] : ('Cons'(X0,X3,X1) = X2 => mG0(X0,X1,X2,X3) = iG1(X0,X1,X2)) [rectify 30]
101. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : (~'Nil'(X0) = X1 => iG1(X0,X1,X2) = merge(X0,mergesort(X0,take(X0,div2(len(X0,X2)),X2)),mergesort(X0,drop(X0,div2(len(X0,X2)),X2)))) [rectify 29]
102. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) != X1 => iG1(X0,X1,X2) = merge(X0,mergesort(X0,take(X0,div2(len(X0,X2)),X2)),mergesort(X0,drop(X0,div2(len(X0,X2)),X2)))) [flattening 101]
103. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X1 => iG1(X0,X1,X2) = X2) [rectify 28]
104. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG0(X0,X1,X2,X3)) [rectify 27]
105. ~! [X0 : $tType,X1 : 'list()'(X0)] : sorted(X0,mergesort(X0,X1)) [flattening 16]
106. ! [X0 : $tType] : ! [X1 : 'list()'(X0),X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X1)) => sorted(X0,merge(X0,X2,X1))) [rectify 14]
107. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : ((sorted(X0,X2) & sorted(X0,X1)) => sorted(X0,merge(X0,X2,X1))) [flattening 106]
108. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : mergesort(X3,X2) = mG0(X3,X0,X2,X1) [rectify 31]
109. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : drop(X5,X4,X3) = mG2(X5,X0,X2,X1,X3,X4) [rectify 37]
110. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : take(X5,X4,X3) = mG4(X5,X0,X2,X1,X3,X4) [rectify 43]
113. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : len(X3,X2) = mG11(X3,X0,X1,X2) [rectify 61]
114. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : (sorted(X3,X2) <=> mG12(X3,X1,X0,X2)) [rectify 65]
115. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : (list_ge_elem(X4,X3,X2) <=> mG13(X4,X2,X1,X0,X3)) [rectify 69]
126. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG13(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 75]
127. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : ((mG12(X0,X1,X2,X3) <=> (list_ge_elem(X0,X2,X1) & sorted(X0,X2))) | 'Cons'(X0,X1,X2) != X3) [ennf transformation 76]
128. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (mG12(X0,X1,X2,X3) | 'Nil'(X0) != X3) [ennf transformation 78]
129. ! [X0 : $tType,X1 : 'list()'(X0),X2 : X0,X3 : 'list()'(X0)] : (s(len(X0,X1)) = mG11(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3) [ennf transformation 79]
141. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 92]
142. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 93]
145. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 96]
146. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 97]
148. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG2(X0,X1,X2,X3,X4,X5) = X4 | zero != X5) [ennf transformation 99]
149. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0] : (mG0(X0,X1,X2,X3) = iG1(X0,X1,X2) | 'Cons'(X0,X3,X1) != X2) [ennf transformation 100]
150. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : (iG1(X0,X1,X2) = merge(X0,mergesort(X0,take(X0,div2(len(X0,X2)),X2)),mergesort(X0,drop(X0,div2(len(X0,X2)),X2))) | 'Nil'(X0) = X1) [ennf transformation 102]
151. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : (iG1(X0,X1,X2) = X2 | 'Nil'(X0) != X1) [ennf transformation 103]
152. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0] : ('Nil'(X0) = mG0(X0,X1,X2,X3) | 'Nil'(X0) != X2) [ennf transformation 104]
153. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,mergesort(X0,X1)) [ennf transformation 105]
154. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : (sorted(X0,merge(X0,X2,X1)) | (~sorted(X0,X2) | ~sorted(X0,X1))) [ennf transformation 107]
155. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0)] : (sorted(X0,merge(X0,X2,X1)) | ~sorted(X0,X2) | ~sorted(X0,X1)) [flattening 154]
162. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (((mG12(X0,X1,X2,X3) | (~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2))) & ((list_ge_elem(X0,X2,X1) & sorted(X0,X2)) | ~mG12(X0,X1,X2,X3))) | 'Cons'(X0,X1,X2) != X3) [nnf transformation 127]
163. ! [X0 : $tType,X1 : X0,X2 : 'list()'(X0),X3 : 'list()'(X0)] : (((mG12(X0,X1,X2,X3) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2)) & ((list_ge_elem(X0,X2,X1) & sorted(X0,X2)) | ~mG12(X0,X1,X2,X3))) | 'Cons'(X0,X1,X2) != X3) [flattening 162]
164. ? [X0 : $tType,X1 : 'list()'(X0)] : ~sorted(X0,mergesort(X0,X1)) => ~sorted(sK14,mergesort(sK14,sK15)) [choice axiom]
165. ~sorted(sK14,mergesort(sK14,sK15)) [skolemisation 153,164]
166. ! [X0 : 'list()'(X3),X1 : X3,X2 : 'list()'(X3),X3 : $tType] : ((sorted(X3,X2) | ~mG12(X3,X1,X0,X2)) & (mG12(X3,X1,X0,X2) | ~sorted(X3,X2))) [nnf transformation 114]
167. ! [X0 : 'list()'(X4),X1 : X4,X2 : X4,X3 : 'list()'(X4),X4 : $tType] : ((list_ge_elem(X4,X3,X2) | ~mG13(X4,X2,X1,X0,X3)) & (mG13(X4,X2,X1,X0,X3) | ~list_ge_elem(X4,X3,X2))) [nnf transformation 115]
172. mG13(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 126]
175. mG12(X0,X1,X2,X3) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2) | 'Cons'(X0,X1,X2) != X3 [cnf transformation 163]
176. mG12(X0,X1,X2,X3) | 'Nil'(X0) != X3 [cnf transformation 128]
177. s(len(X0,X1)) = mG11(X0,X1,X2,X3) | 'Cons'(X0,X2,X1) != X3 [cnf transformation 129]
189. mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 141]
190. mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 142]
193. mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 145]
194. mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 146]
196. mG2(X0,X1,X2,X3,X4,X5) = X4 | zero != X5 [cnf transformation 148]
197. mG0(X0,X1,X2,X3) = iG1(X0,X1,X2) | 'Cons'(X0,X3,X1) != X2 [cnf transformation 149]
198. iG1(X0,X1,X2) = merge(X0,mergesort(X0,take(X0,div2(len(X0,X2)),X2)),mergesort(X0,drop(X0,div2(len(X0,X2)),X2))) | 'Nil'(X0) = X1 [cnf transformation 150]
199. iG1(X0,X1,X2) = X2 | 'Nil'(X0) != X1 [cnf transformation 151]
200. 'Nil'(X0) = mG0(X0,X1,X2,X3) | 'Nil'(X0) != X2 [cnf transformation 152]
201. ~sorted(sK14,mergesort(sK14,sK15)) [cnf transformation 165]
202. sorted(X0,merge(X0,X2,X1)) | ~sorted(X0,X2) | ~sorted(X0,X1) [cnf transformation 155]
203. mergesort(X3,X2) = mG0(X3,X0,X2,X1) [cnf transformation 108]
204. drop(X5,X4,X3) = mG2(X5,X0,X2,X1,X3,X4) [cnf transformation 109]
205. take(X5,X4,X3) = mG4(X5,X0,X2,X1,X3,X4) [cnf transformation 110]
208. len(X3,X2) = mG11(X3,X0,X1,X2) [cnf transformation 113]
209. mG12(X3,X1,X0,X2) | ~sorted(X3,X2) [cnf transformation 166]
210. ~mG12(X3,X1,X0,X2) | sorted(X3,X2) [cnf transformation 166]
212. ~mG13(X4,X2,X1,X0,X3) | list_ge_elem(X4,X3,X2) [cnf transformation 167]
219. len(X0,X3) = s(len(X0,X1)) | 'Cons'(X0,X2,X1) != X3 [definition unfolding 177,208]
225. mG5(X0,X1,X2,X3,X4) = take(X0,X5,X4) | s(X2) != X5 [definition unfolding 189,205]
227. mG3(X0,X1,X2,X3,X4) = drop(X0,X5,X4) | s(X2) != X5 [definition unfolding 193,204]
228. drop(X0,X5,X4) = X4 | zero != X5 [definition unfolding 196,204]
229. iG1(X0,X1,X2) = mergesort(X0,X2) | 'Cons'(X0,X3,X1) != X2 [definition unfolding 197,203]
230. 'Nil'(X0) = mergesort(X0,X2) | 'Nil'(X0) != X2 [definition unfolding 200,203]
234. mG13(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 172]
235. mG12(X0,X1,X2,'Cons'(X0,X1,X2)) | ~list_ge_elem(X0,X2,X1) | ~sorted(X0,X2) [equality resolution 175]
238. mG12(X0,X1,X2,'Nil'(X0)) [equality resolution 176]
239. s(len(X0,X1)) = len(X0,'Cons'(X0,X2,X1)) [equality resolution 219]
249. mG5(X0,X1,X2,X3,X4) = take(X0,s(X2),X4) [equality resolution 225]
250. 'Cons'(X0,X3,take(X0,X2,X1)) = mG5(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 190]
253. mG3(X0,X1,X2,X3,X4) = drop(X0,s(X2),X4) [equality resolution 227]
254. drop(X0,X2,X1) = mG3(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 194]
256. drop(X0,zero,X4) = X4 [equality resolution 228]
257. iG1(X0,X1,'Cons'(X0,X3,X1)) = mergesort(X0,'Cons'(X0,X3,X1)) [equality resolution 229]
258. iG1(X0,'Nil'(X0),X2) = X2 [equality resolution 199]
259. 'Nil'(X0) = mergesort(X0,'Nil'(X0)) [equality resolution 230]
262. 'Cons'(X0,X3,take(X0,X2,X1)) = take(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 250,249]
264. drop(X0,X2,X1) = drop(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 254,253]
270. ! [X2 : 'list()'(sK14),X1 : sK14] : (((sorted(sK14,mergesort(sK14,drop(sK14,div2(len(sK14,'Cons'(sK14,X1,X2))),'Cons'(sK14,X1,X2)))) & sorted(sK14,mergesort(sK14,take(sK14,div2(len(sK14,'Cons'(sK14,X1,X2))),'Cons'(sK14,X1,X2))))) => sorted(sK14,mergesort(sK14,'Cons'(sK14,X1,X2)))) & sorted(sK14,mergesort(sK14,'Nil'(sK14)))) => ! [X4 : 'list()'(sK14)] : sorted(sK14,mergesort(sK14,X4)) [structural induction hypothesis (recursion)]
271. ! [X4 : 'list()'(sK14)] : sorted(sK14,mergesort(sK14,X4)) | ? [X2 : 'list()'(sK14),X1 : sK14] : ((~sorted(sK14,mergesort(sK14,'Cons'(sK14,X1,X2))) & (sorted(sK14,mergesort(sK14,drop(sK14,div2(len(sK14,'Cons'(sK14,X1,X2))),'Cons'(sK14,X1,X2)))) & sorted(sK14,mergesort(sK14,take(sK14,div2(len(sK14,'Cons'(sK14,X1,X2))),'Cons'(sK14,X1,X2)))))) | ~sorted(sK14,mergesort(sK14,'Nil'(sK14)))) [ennf transformation 270]
272. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | sorted(sK14,mergesort(sK14,take(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) | sorted(sK14,mergesort(sK14,X4)) [cnf transformation 271]
273. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | sorted(sK14,mergesort(sK14,drop(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) | sorted(sK14,mergesort(sK14,X4)) [cnf transformation 271]
274. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | ~sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,sK19))) | sorted(sK14,mergesort(sK14,X4)) [cnf transformation 271]
277. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | ~sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,sK19))) [induction hyperresolution 201,274]
278. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | sorted(sK14,mergesort(sK14,drop(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) [induction hyperresolution 201,273]
279. ~sorted(sK14,mergesort(sK14,'Nil'(sK14))) | sorted(sK14,mergesort(sK14,take(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) [induction hyperresolution 201,272]
280. ~sorted(sK14,'Nil'(sK14)) | sorted(sK14,mergesort(sK14,take(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) [forward demodulation 279,259]
281. sorted(sK14,mergesort(sK14,take(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) | ~sorted(sK14,'Nil'(sK14)) [forward demodulation 280,239]
283. 1 <=> sorted(sK14,'Nil'(sK14)) [avatar definition]
285. ~sorted(sK14,'Nil'(sK14)) <- (~1) [avatar component clause 283]
287. 2 <=> sorted(sK14,mergesort(sK14,take(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) [avatar definition]
289. sorted(sK14,mergesort(sK14,take(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) <- (2) [avatar component clause 287]
290. ~1 | 2 [avatar split clause 281,287,283]
291. ~sorted(sK14,'Nil'(sK14)) | sorted(sK14,mergesort(sK14,drop(sK14,div2(len(sK14,'Cons'(sK14,sK20,sK19))),'Cons'(sK14,sK20,sK19)))) [forward demodulation 278,259]
292. sorted(sK14,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) | ~sorted(sK14,'Nil'(sK14)) [forward demodulation 291,239]
294. 3 <=> sorted(sK14,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) [avatar definition]
296. sorted(sK14,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) <- (3) [avatar component clause 294]
297. ~1 | 3 [avatar split clause 292,294,283]
298. ~sorted(sK14,'Nil'(sK14)) | ~sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,sK19))) [forward demodulation 277,259]
300. 4 <=> sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,sK19))) [avatar definition]
302. ~sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,sK19))) <- (~4) [avatar component clause 300]
303. ~4 | ~1 [avatar split clause 298,283,300]
322. ~mG12(sK14,X0,X1,'Nil'(sK14)) <- (~1) [unit resulting resolution 285,210]
323. sorted(X0,'Nil'(X0)) [unit resulting resolution 238,210]
328. $false <- (~1) [subsumption resolution 322,238]
329. 1 [avatar contradiction clause 328]
367. ~mG12(sK14,X0,X1,mergesort(sK14,'Cons'(sK14,sK20,sK19))) <- (~4) [unit resulting resolution 302,210]
409. list_ge_elem(X0,'Nil'(X0),X1) [unit resulting resolution 234,212]
539. mG12(X0,X1,'Nil'(X0),'Cons'(X0,X1,'Nil'(X0))) [unit resulting resolution 323,409,235]
554. drop(X1,s_0(X0),X2) = drop(X1,X0,'Cons'(X1,X3,X2)) | zero = X0 [superposition 264,21]
560. sorted(X0,'Cons'(X0,X1,'Nil'(X0))) [unit resulting resolution 539,210]
579. mG12(X0,X1,X2,'Cons'(X0,X3,'Nil'(X0))) [unit resulting resolution 560,209]
583. 'Cons'(X0,X1,'Nil'(X0)) = mergesort(X0,'Cons'(X0,X1,'Nil'(X0))) [superposition 257,258]
666. 'Cons'(X1,X2,take(X1,s_0(X0),X3)) = take(X1,X0,'Cons'(X1,X2,X3)) | zero = X0 [superposition 262,21]
707. mergesort(X2,'Cons'(X2,X4,X3)) = merge(X2,mergesort(X2,take(X2,div2(len(X2,'Cons'(X2,X4,X3))),'Cons'(X2,X4,X3))),mergesort(X2,drop(X2,div2(len(X2,'Cons'(X2,X4,X3))),'Cons'(X2,X4,X3)))) | 'Nil'(X2) = X3 [superposition 198,257]
710. mergesort(X2,'Cons'(X2,X4,X3)) = merge(X2,mergesort(X2,take(X2,div2(s(len(X2,X3))),'Cons'(X2,X4,X3))),mergesort(X2,drop(X2,div2(s(len(X2,X3))),'Cons'(X2,X4,X3)))) | 'Nil'(X2) = X3 [forward demodulation 707,239]
904. mG12(sK14,X0,X1,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) <- (3) [unit resulting resolution 296,209]
1025. sorted(sK14,mergesort(sK14,drop(sK14,s_0(div2(s(len(sK14,sK19)))),sK19))) | zero = div2(s(len(sK14,sK19))) <- (3) [superposition 296,554]
1034. 19 <=> zero = div2(s(len(sK14,sK19))) [avatar definition]
1035. zero != div2(s(len(sK14,sK19))) <- (~19) [avatar component clause 1034]
1036. zero = div2(s(len(sK14,sK19))) <- (19) [avatar component clause 1034]
1038. 20 <=> sorted(sK14,mergesort(sK14,drop(sK14,s_0(div2(s(len(sK14,sK19)))),sK19))) [avatar definition]
1040. sorted(sK14,mergesort(sK14,drop(sK14,s_0(div2(s(len(sK14,sK19)))),sK19))) <- (20) [avatar component clause 1038]
1041. 19 | 20 | ~3 [avatar split clause 1025,294,1038,1034]
1079. mG12(sK14,X0,X1,mergesort(sK14,drop(sK14,zero,'Cons'(sK14,sK20,sK19)))) <- (3, 19) [backward demodulation 904,1036]
1155. mG12(sK14,X0,X1,mergesort(sK14,'Cons'(sK14,sK20,sK19))) <- (3, 19) [forward demodulation 1079,256]
1156. $false <- (3, ~4, 19) [subsumption resolution 1155,367]
1157. ~3 | 4 | ~19 [avatar contradiction clause 1156]
1619. 'Cons'(X0,X1,take(X0,s_0(div2(s(len(sK14,sK19)))),X2)) = take(X0,div2(s(len(sK14,sK19))),'Cons'(X0,X1,X2)) <- (~19) [unit resulting resolution 1035,666]
1674. sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,take(sK14,s_0(div2(s(len(sK14,sK19)))),sK19)))) <- (2, ~19) [backward demodulation 289,1619]
2535. ~sorted(X0,mergesort(X0,drop(X0,div2(s(len(X0,X1))),'Cons'(X0,X2,X1)))) | ~sorted(X0,mergesort(X0,take(X0,div2(s(len(X0,X1))),'Cons'(X0,X2,X1)))) | sorted(X0,mergesort(X0,'Cons'(X0,X2,X1))) | 'Nil'(X0) = X1 [superposition 202,710]
4058. sorted(sK14,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,X0,sK19)))) | zero = div2(s(len(sK14,sK19))) <- (20) [superposition 1040,554]
4060. sorted(sK14,mergesort(sK14,drop(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,X0,sK19)))) <- (~19, 20) [subsumption resolution 4058,1035]
31078. 396 <=> 'Nil'(sK14) = sK19 [avatar definition]
31079. 'Nil'(sK14) != sK19 <- (~396) [avatar component clause 31078]
31080. 'Nil'(sK14) = sK19 <- (396) [avatar component clause 31078]
31116. ~mG12(sK14,X0,X1,mergesort(sK14,'Cons'(sK14,sK20,'Nil'(sK14)))) <- (~4, 396) [backward demodulation 367,31080]
31128. ~mG12(sK14,X0,X1,'Cons'(sK14,sK20,'Nil'(sK14))) <- (~4, 396) [forward demodulation 31116,583]
31129. $false <- (~4, 396) [subsumption resolution 31128,579]
31130. 4 | ~396 [avatar contradiction clause 31129]
33203. 'Cons'(X0,X1,take(X0,s_0(div2(s(len(sK14,sK19)))),X2)) = take(X0,div2(s(len(sK14,sK19))),'Cons'(X0,X1,X2)) <- (~19) [unit resulting resolution 1035,666]
45823. ~sorted(sK14,mergesort(sK14,take(sK14,div2(s(len(sK14,sK19))),'Cons'(sK14,sK20,sK19)))) <- (~4, ~19, 20, ~396) [unit resulting resolution 31079,302,4060,2535]
45865. ~sorted(sK14,mergesort(sK14,'Cons'(sK14,sK20,take(sK14,s_0(div2(s(len(sK14,sK19)))),sK19)))) <- (~4, ~19, 20, ~396) [forward demodulation 45823,33203]
45866. $false <- (2, ~4, ~19, 20, ~396) [subsumption resolution 45865,1674]
45867. ~2 | 4 | 19 | ~20 | 396 [avatar contradiction clause 45866]
45870. $false [avatar sat refutation 290,297,303,329,1041,1157,31130,45867]
% SZS output end Proof for conjecture
% (45088)------------------------------
% (45088)Version: Vampire 4.7 (commit )
% (45088)Linked with Z3 4.9.1.0  NOTFOUND
% (45088)Termination reason: Refutation

% (45088)Memory used [KB]: 44647
% (45088)Time elapsed: 2.709 s
% (45088)------------------------------
% (45088)------------------------------
% (45078)Success in time 2.602 s
