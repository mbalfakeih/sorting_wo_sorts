% (44362)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=on_89 on lemma2 for (89ds/0Mi)
% (44363)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=off_89 on lemma2 for (89ds/0Mi)
% (44365)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=off_89 on lemma2 for (89ds/0Mi)
% (44361)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=on:urr=off_89 on lemma2 for (89ds/0Mi)
% (44371)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=off_89 on lemma2 for (89ds/0Mi)
% (44364)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=off:indao=off:urr=on_89 on lemma2 for (89ds/0Mi)
% (44366)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=on:urr=on_89 on lemma2 for (89ds/0Mi)
% (44370)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=on_89 on lemma2 for (89ds/0Mi)
% (44369)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=on:urr=off_89 on lemma2 for (89ds/0Mi)
% (44372)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=off:indao=off:urr=on_89 on lemma2 for (89ds/0Mi)
% (44373)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=off_89 on lemma2 for (89ds/0Mi)
% (44367)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=off_89 on lemma2 for (89ds/0Mi)
% (44368)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=off:indoct=on:indao=off:urr=on_89 on lemma2 for (89ds/0Mi)
% (44374)lrs+10_1_ind=struct:sos=theory:sstl=1:drc=encompass:sp=occurrence:to=lpo:sik=recursion:nui=on:indoct=on:indao=on:urr=on_89 on lemma2 for (89ds/0Mi)
% (44371)First to succeed.
% (44371)Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma2
% SZS output start Proof for lemma2
1. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
6. take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [input]
7. drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [input]
8. filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [input]
9. ! [X0 : $tType] : ! [X2 : 'nat()',X1 : X0,X3 : 'list()'(X0)] : append(X0,filter_mset(X0,X1,take(X0,X2,X3)),filter_mset(X0,X1,drop(X0,X2,X3))) = filter_mset(X0,X1,X3) [input]
10. ~! [X0 : $tType] : ! [X2 : 'nat()',X1 : X0,X3 : 'list()'(X0)] : append(X0,filter_mset(X0,X1,take(X0,X2,X3)),filter_mset(X0,X1,drop(X0,X2,X3))) = filter_mset(X0,X1,X3) [negated conjecture 9]
20. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [closure 8]
21. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG0(X0,X3,X1,X4,X2)) [fool $match elimination 20]
22. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (X1 = X3 => 'Cons'(X0,X3,filter_mset(X0,X1,X4)) = iG1(X0,X3,X1,X4)) [fool $ite elimination 20]
23. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (~X1 = X3 => filter_mset(X0,X1,X4) = iG1(X0,X3,X1,X4)) [fool $ite elimination 20]
24. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG0(X0,X3,X1,X4,X2) = iG1(X0,X3,X1,X4)) [fool $match elimination 20]
25. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = mG0(X0,X3,X1,X4,X2) [fool elimination 20]
26. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [closure 7]
27. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (zero = X1 => mG2(X0,X5,X3,X4,X2,X1) = X2) [fool $match elimination 26]
28. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG3(X0,X5,X3,X4,X2)) [fool $match elimination 26]
29. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => drop(X0,X3,X5) = mG3(X0,X5,X3,X4,X2)) [fool $match elimination 26]
30. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG2(X0,X5,X3,X4,X2,X1) = mG3(X0,X5,X3,X4,X2)) [fool $match elimination 26]
31. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = mG2(X0,X5,X3,X4,X2,X1) [fool elimination 26]
32. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [closure 6]
33. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (zero = X1 => 'Nil'(X0) = mG4(X0,X5,X3,X4,X2,X1)) [fool $match elimination 32]
34. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG5(X0,X5,X3,X4,X2)) [fool $match elimination 32]
35. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => 'Cons'(X0,X4,take(X0,X3,X5)) = mG5(X0,X5,X3,X4,X2)) [fool $match elimination 32]
36. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG4(X0,X5,X3,X4,X2,X1) = mG5(X0,X5,X3,X4,X2)) [fool $match elimination 32]
37. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = mG4(X0,X5,X3,X4,X2,X1) [fool elimination 32]
60. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 1]
61. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => mG13(X0,X2,X4,X3,X1) = X2) [fool $match elimination 60]
62. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG13(X0,X2,X4,X3,X1)) [fool $match elimination 60]
63. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG13(X0,X2,X4,X3,X1) [fool elimination 60]
64. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG13(X0,X1,X2,X3,X4)) [rectify 62]
65. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG13(X0,X1,X2,X3,X4) = X1) [rectify 61]
80. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4)) [rectify 36]
81. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1))) [rectify 35]
82. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG5(X0,X1,X2,X3,X4)) [rectify 34]
83. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (zero = X5 => 'Nil'(X0) = mG4(X0,X1,X2,X3,X4,X5)) [rectify 33]
84. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4)) [rectify 30]
85. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1)) [rectify 29]
86. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG3(X0,X1,X2,X3,X4)) [rectify 28]
87. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (zero = X5 => mG2(X0,X1,X2,X3,X4,X5) = X4) [rectify 27]
88. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X1,X3) = X4 => mG0(X0,X1,X2,X3,X4) = iG1(X0,X1,X2,X3)) [rectify 24]
89. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~X1 = X2 => iG1(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [rectify 23]
90. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 != X2 => iG1(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [flattening 89]
91. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 = X2 => iG1(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3))) [rectify 22]
92. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG0(X0,X1,X2,X3,X4)) [rectify 21]
93. ~! [X0 : $tType] : ! [X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) = append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [rectify 10]
94. ~! [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) = append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [flattening 93]
95. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_mset(X4,X3,X2) = mG0(X4,X1,X3,X0,X2) [rectify 25]
96. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : drop(X5,X4,X3) = mG2(X5,X0,X2,X1,X3,X4) [rectify 31]
97. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : take(X5,X4,X3) = mG4(X5,X0,X2,X1,X3,X4) [rectify 37]
102. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG13(X4,X2,X0,X1,X3) [rectify 63]
103. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG13(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 64]
104. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : (mG13(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4) [ennf transformation 65]
119. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 80]
120. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 81]
121. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 82]
122. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : ('Nil'(X0) = mG4(X0,X1,X2,X3,X4,X5) | zero != X5) [ennf transformation 83]
123. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 84]
124. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 85]
125. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = mG3(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 86]
126. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG2(X0,X1,X2,X3,X4,X5) = X4 | zero != X5) [ennf transformation 87]
127. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG0(X0,X1,X2,X3,X4) = iG1(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4) [ennf transformation 88]
128. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG1(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2) [ennf transformation 90]
129. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG1(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2) [ennf transformation 91]
130. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG0(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 92]
131. ? [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) != append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [ennf transformation 94]
132. ? [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) != append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) => filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [choice axiom]
133. filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [skolemisation 131,132]
134. 'Cons'(X0,X3,append(X0,X2,X1)) = mG13(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 103]
135. mG13(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4 [cnf transformation 104]
150. mG4(X0,X1,X2,X3,X4,X5) = mG5(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 119]
151. mG5(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 120]
152. 'Nil'(X0) = mG5(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 121]
153. 'Nil'(X0) = mG4(X0,X1,X2,X3,X4,X5) | zero != X5 [cnf transformation 122]
154. mG2(X0,X1,X2,X3,X4,X5) = mG3(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 123]
155. mG3(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 124]
156. 'Nil'(X0) = mG3(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 125]
157. mG2(X0,X1,X2,X3,X4,X5) = X4 | zero != X5 [cnf transformation 126]
158. mG0(X0,X1,X2,X3,X4) = iG1(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4 [cnf transformation 127]
159. iG1(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2 [cnf transformation 128]
160. iG1(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2 [cnf transformation 129]
161. 'Nil'(X0) = mG0(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 130]
162. filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [cnf transformation 133]
163. filter_mset(X4,X3,X2) = mG0(X4,X1,X3,X0,X2) [cnf transformation 95]
164. drop(X5,X4,X3) = mG2(X5,X0,X2,X1,X3,X4) [cnf transformation 96]
165. take(X5,X4,X3) = mG4(X5,X0,X2,X1,X3,X4) [cnf transformation 97]
170. append(X4,X3,X2) = mG13(X4,X2,X0,X1,X3) [cnf transformation 102]
171. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 134,170]
172. append(X0,X4,X1) = X1 | 'Nil'(X0) != X4 [definition unfolding 135,170]
181. mG5(X0,X1,X2,X3,X4) = take(X0,X5,X4) | s(X2) != X5 [definition unfolding 150,165]
182. 'Nil'(X0) = take(X0,X5,X4) | zero != X5 [definition unfolding 153,165]
183. mG3(X0,X1,X2,X3,X4) = drop(X0,X5,X4) | s(X2) != X5 [definition unfolding 154,164]
184. drop(X0,X5,X4) = X4 | zero != X5 [definition unfolding 157,164]
185. iG1(X0,X1,X2,X3) = filter_mset(X0,X2,X4) | 'Cons'(X0,X1,X3) != X4 [definition unfolding 158,163]
186. 'Nil'(X0) = filter_mset(X0,X2,X4) | 'Nil'(X0) != X4 [definition unfolding 161,163]
187. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 171]
188. append(X0,'Nil'(X0),X1) = X1 [equality resolution 172]
203. mG5(X0,X1,X2,X3,X4) = take(X0,s(X2),X4) [equality resolution 181]
204. 'Cons'(X0,X3,take(X0,X2,X1)) = mG5(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 151]
205. 'Nil'(X0) = mG5(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 152]
206. 'Nil'(X0) = take(X0,zero,X4) [equality resolution 182]
207. mG3(X0,X1,X2,X3,X4) = drop(X0,s(X2),X4) [equality resolution 183]
208. drop(X0,X2,X1) = mG3(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 155]
209. 'Nil'(X0) = mG3(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 156]
210. drop(X0,zero,X4) = X4 [equality resolution 184]
211. iG1(X0,X1,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [equality resolution 185]
212. iG1(X0,X2,X2,X3) = 'Cons'(X0,X2,filter_mset(X0,X2,X3)) [equality resolution 160]
213. 'Nil'(X0) = filter_mset(X0,X2,'Nil'(X0)) [equality resolution 186]
218. 'Cons'(X0,X3,take(X0,X2,X1)) = take(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 204,203]
219. 'Nil'(X0) = take(X0,s(X2),'Nil'(X0)) [forward demodulation 205,203]
220. drop(X0,X2,X1) = drop(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 208,207]
221. 'Nil'(X0) = drop(X0,s(X2),'Nil'(X0)) [forward demodulation 209,207]
222. filter_mset(X0,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) | X1 = X2 [forward demodulation 159,211]
290. 'Cons'(X0,X1,filter_mset(X0,X1,X2)) = filter_mset(X0,X1,'Cons'(X0,X1,X2)) [superposition 212,211]
424. ! [X3 : 'list()'(sK14),X7 : 'list()'(sK14),X5 : 'nat()',X2 : sK14,X1 : 'nat()'] : ((filter_mset(sK14,sK16,X3) = append(sK14,filter_mset(sK14,sK16,take(sK14,X1,X3)),filter_mset(sK14,sK16,drop(sK14,X1,X3))) => filter_mset(sK14,sK16,'Cons'(sK14,X2,X3)) = append(sK14,filter_mset(sK14,sK16,take(sK14,s(X1),'Cons'(sK14,X2,X3))),filter_mset(sK14,sK16,drop(sK14,s(X1),'Cons'(sK14,X2,X3))))) & filter_mset(sK14,sK16,'Nil'(sK14)) = append(sK14,filter_mset(sK14,sK16,take(sK14,s(X5),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(X5),'Nil'(sK14)))) & filter_mset(sK14,sK16,X7) = append(sK14,filter_mset(sK14,sK16,take(sK14,zero,X7)),filter_mset(sK14,sK16,drop(sK14,zero,X7)))) => ! [X9 : 'list()'(sK14),X8 : 'nat()'] : filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [structural induction hypothesis (recursion)]
425. ! [X9 : 'list()'(sK14),X8 : 'nat()'] : filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) | ? [X3 : 'list()'(sK14),X7 : 'list()'(sK14),X5 : 'nat()',X2 : sK14,X1 : 'nat()'] : ((filter_mset(sK14,sK16,'Cons'(sK14,X2,X3)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(X1),'Cons'(sK14,X2,X3))),filter_mset(sK14,sK16,drop(sK14,s(X1),'Cons'(sK14,X2,X3)))) & filter_mset(sK14,sK16,X3) = append(sK14,filter_mset(sK14,sK16,take(sK14,X1,X3)),filter_mset(sK14,sK16,drop(sK14,X1,X3)))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(X5),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(X5),'Nil'(sK14)))) | filter_mset(sK14,sK16,X7) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,X7)),filter_mset(sK14,sK16,drop(sK14,zero,X7)))) [ennf transformation 424]
426. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,drop(sK14,zero,sK28))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) | filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [cnf transformation 425]
427. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,drop(sK14,zero,sK28))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) | filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [cnf transformation 425]
430. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,drop(sK14,zero,sK28))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [induction hyperresolution 162,427]
431. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,drop(sK14,zero,sK28))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [induction hyperresolution 162,426]
472. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 431,210]
473. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 472,206]
474. filter_mset(sK14,sK16,sK28) != append(sK14,'Nil'(sK14),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 473,213]
475. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [subsumption resolution 474,188]
476. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,'Nil'(sK14))) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 475,221]
477. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),'Nil'(sK14)) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 476,213]
478. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),'Nil'(sK14)) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 477,219]
479. 'Nil'(sK14) != append(sK14,'Nil'(sK14),'Nil'(sK14)) | filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 478,213]
480. filter_mset(sK14,sK16,sK27) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [subsumption resolution 479,188]
481. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK28)),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 430,210]
482. filter_mset(sK14,sK16,sK28) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 481,206]
483. filter_mset(sK14,sK16,sK28) != append(sK14,'Nil'(sK14),filter_mset(sK14,sK16,sK28)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 482,213]
484. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK29),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [subsumption resolution 483,188]
485. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),filter_mset(sK14,sK16,'Nil'(sK14))) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 484,221]
486. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK29),'Nil'(sK14))),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 485,213]
487. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 486,219]
488. 'Nil'(sK14) != append(sK14,'Nil'(sK14),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [forward demodulation 487,213]
489. filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,s(sK31),'Cons'(sK14,sK30,sK27)))) [subsumption resolution 488,188]
490. filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK31),'Cons'(sK14,sK30,sK27))),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 489,220]
491. filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) != append(sK14,filter_mset(sK14,sK16,'Cons'(sK14,sK30,take(sK14,sK31,sK27))),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 490,218]
1333. append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) != filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) | sK16 = sK30 [superposition 491,222]
1358. filter_mset(sK14,sK16,sK27) != filter_mset(sK14,sK16,'Cons'(sK14,sK30,sK27)) | sK16 = sK30 [forward demodulation 1333,480]
1359. sK16 = sK30 [subsumption resolution 1358,222]
1360. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK27)) != append(sK14,filter_mset(sK14,sK16,'Cons'(sK14,sK16,take(sK14,sK31,sK27))),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [backward demodulation 491,1359]
1361. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK27)) != append(sK14,'Cons'(sK14,sK16,filter_mset(sK14,sK16,take(sK14,sK31,sK27))),filter_mset(sK14,sK16,drop(sK14,sK31,sK27))) [forward demodulation 1360,290]
1362. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK27)) != 'Cons'(sK14,sK16,append(sK14,filter_mset(sK14,sK16,take(sK14,sK31,sK27)),filter_mset(sK14,sK16,drop(sK14,sK31,sK27)))) [forward demodulation 1361,187]
1363. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK27)) != 'Cons'(sK14,sK16,filter_mset(sK14,sK16,sK27)) [forward demodulation 1362,480]
1364. $false [subsumption resolution 1363,290]
% SZS output end Proof for lemma2
% (44371)------------------------------
% (44371)Version: Vampire 4.7 (commit )
% (44371)Linked with Z3 4.9.1.0  NOTFOUND
% (44371)Termination reason: Refutation

% (44371)Memory used [KB]: 6652
% (44371)Time elapsed: 0.037 s
% (44371)------------------------------
% (44371)------------------------------
% (44360)Success in time 0.039 s
