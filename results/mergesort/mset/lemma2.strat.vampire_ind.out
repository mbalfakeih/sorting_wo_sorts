% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for lemma2
% SZS output start Proof for lemma2
1. append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [input]
6. take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [input]
7. drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [input]
8. filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [input]
9. ! [X0 : $tType] : ! [X2 : 'nat()',X1 : X0,X3 : 'list()'(X0)] : append(X0,filter_mset(X0,X1,take(X0,X2,X3)),filter_mset(X0,X1,drop(X0,X2,X3))) = filter_mset(X0,X1,X3) [input]
10. ~! [X0 : $tType] : ! [X2 : 'nat()',X1 : X0,X3 : 'list()'(X0)] : append(X0,filter_mset(X0,X1,take(X0,X2,X3)),filter_mset(X0,X1,drop(X0,X2,X3))) = filter_mset(X0,X1,X3) [negated conjecture 9]
42. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = $match(X1,zero,X2,s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),drop(X0,X3,X5))) [closure 7]
43. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (zero = X1 => mG7(X0,X5,X3,X4,X2,X1) = X2) [fool $match elimination 42]
44. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG8(X0,X5,X3,X4,X2)) [fool $match elimination 42]
45. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => drop(X0,X3,X5) = mG8(X0,X5,X3,X4,X2)) [fool $match elimination 42]
46. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG7(X0,X5,X3,X4,X2,X1) = mG8(X0,X5,X3,X4,X2)) [fool $match elimination 42]
47. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : drop(X0,X1,X2) = mG7(X0,X5,X3,X4,X2,X1) [fool elimination 42]
48. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = $match(X1,zero,'Nil'(X0),s(X3),$match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X4,X5),'Cons'(X0,X4,take(X0,X3,X5)))) [closure 6]
49. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (zero = X1 => 'Nil'(X0) = mG9(X0,X5,X3,X4,X2,X1)) [fool $match elimination 48]
50. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG10(X0,X5,X3,X4,X2)) [fool $match elimination 48]
51. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0)] : ('Cons'(X0,X4,X5) = X2 => 'Cons'(X0,X4,take(X0,X3,X5)) = mG10(X0,X5,X3,X4,X2)) [fool $match elimination 48]
52. ! [X0 : $tType,X5 : 'list()'(X0),X3 : 'nat()',X4 : X0,X2 : 'list()'(X0),X1 : 'nat()'] : (s(X3) = X1 => mG9(X0,X5,X3,X4,X2,X1) = mG10(X0,X5,X3,X4,X2)) [fool $match elimination 48]
53. ! [X5 : 'list()'(X0),X4 : X0,X3 : 'nat()',X2 : 'list()'(X0),X1 : 'nat()',X0 : $tType] : take(X0,X1,X2) = mG9(X0,X5,X3,X4,X2,X1) [fool elimination 48]
54. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = $match(X1,'Nil'(X0),X2,'Cons'(X0,X3,X4),'Cons'(X0,X3,append(X0,X4,X2))) [closure 1]
55. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Nil'(X0) = X1 => mG11(X0,X2,X4,X3,X1) = X2) [fool $match elimination 54]
56. ! [X0 : $tType,X2 : 'list()'(X0),X4 : 'list()'(X0),X3 : X0,X1 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X1 => 'Cons'(X0,X3,append(X0,X4,X2)) = mG11(X0,X2,X4,X3,X1)) [fool $match elimination 54]
57. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : 'list()'(X0),X0 : $tType] : append(X0,X1,X2) = mG11(X0,X2,X4,X3,X1) [fool elimination 54]
58. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = $match(X2,'Nil'(X0),'Nil'(X0),'Cons'(X0,X3,X4),$ite(X1 = X3, 'Cons'(X0,X3,filter_mset(X0,X1,X4)),filter_mset(X0,X1,X4))) [closure 8]
59. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Nil'(X0) = X2 => 'Nil'(X0) = mG12(X0,X3,X1,X4,X2)) [fool $match elimination 58]
60. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (X1 = X3 => 'Cons'(X0,X3,filter_mset(X0,X1,X4)) = iG13(X0,X3,X1,X4)) [fool $ite elimination 58]
61. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0)] : (~X1 = X3 => filter_mset(X0,X1,X4) = iG13(X0,X3,X1,X4)) [fool $ite elimination 58]
62. ! [X0 : $tType,X3 : X0,X1 : X0,X4 : 'list()'(X0),X2 : 'list()'(X0)] : ('Cons'(X0,X3,X4) = X2 => mG12(X0,X3,X1,X4,X2) = iG13(X0,X3,X1,X4)) [fool $match elimination 58]
63. ! [X4 : 'list()'(X0),X3 : X0,X2 : 'list()'(X0),X1 : X0,X0 : $tType] : filter_mset(X0,X1,X2) = mG12(X0,X3,X1,X4,X2) [fool elimination 58]
64. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Cons'(X0,X1,X3) = X4 => mG12(X0,X1,X2,X3,X4) = iG13(X0,X1,X2,X3)) [rectify 62]
65. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (~X1 = X2 => iG13(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [rectify 61]
66. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 != X2 => iG13(X0,X1,X2,X3) = filter_mset(X0,X2,X3)) [flattening 65]
67. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (X1 = X2 => iG13(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3))) [rectify 60]
68. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG12(X0,X1,X2,X3,X4)) [rectify 59]
69. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X2) = X4 => 'Cons'(X0,X3,append(X0,X2,X1)) = mG11(X0,X1,X2,X3,X4)) [rectify 56]
70. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => mG11(X0,X1,X2,X3,X4) = X1) [rectify 55]
71. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG9(X0,X1,X2,X3,X4,X5) = mG10(X0,X1,X2,X3,X4)) [rectify 52]
72. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG10(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1))) [rectify 51]
73. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG10(X0,X1,X2,X3,X4)) [rectify 50]
74. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (zero = X5 => 'Nil'(X0) = mG9(X0,X1,X2,X3,X4,X5)) [rectify 49]
75. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (s(X2) = X5 => mG7(X0,X1,X2,X3,X4,X5) = mG8(X0,X1,X2,X3,X4)) [rectify 46]
76. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,X1) = X4 => mG8(X0,X1,X2,X3,X4) = drop(X0,X2,X1)) [rectify 45]
77. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = X4 => 'Nil'(X0) = mG8(X0,X1,X2,X3,X4)) [rectify 44]
78. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (zero = X5 => mG7(X0,X1,X2,X3,X4,X5) = X4) [rectify 43]
93. ~! [X0 : $tType] : ! [X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) = append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [rectify 10]
94. ~! [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) = append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [flattening 93]
99. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : drop(X5,X4,X3) = mG7(X5,X0,X2,X1,X3,X4) [rectify 47]
100. ! [X0 : 'list()'(X5),X1 : X5,X2 : 'nat()',X3 : 'list()'(X5),X4 : 'nat()',X5 : $tType] : take(X5,X4,X3) = mG9(X5,X0,X2,X1,X3,X4) [rectify 53]
101. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : 'list()'(X4),X4 : $tType] : append(X4,X3,X2) = mG11(X4,X2,X0,X1,X3) [rectify 57]
102. ! [X0 : 'list()'(X4),X1 : X4,X2 : 'list()'(X4),X3 : X4,X4 : $tType] : filter_mset(X4,X3,X2) = mG12(X4,X1,X3,X0,X2) [rectify 63]
103. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : (mG12(X0,X1,X2,X3,X4) = iG13(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4) [ennf transformation 64]
104. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG13(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2) [ennf transformation 66]
105. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0)] : (iG13(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2) [ennf transformation 67]
106. ! [X0 : $tType,X1 : X0,X2 : X0,X3 : 'list()'(X0),X4 : 'list()'(X0)] : ('Nil'(X0) = mG12(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 68]
107. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : ('Cons'(X0,X3,append(X0,X2,X1)) = mG11(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4) [ennf transformation 69]
108. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'list()'(X0),X3 : X0,X4 : 'list()'(X0)] : (mG11(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4) [ennf transformation 70]
109. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG9(X0,X1,X2,X3,X4,X5) = mG10(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 71]
110. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG10(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 72]
111. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = mG10(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 73]
112. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : ('Nil'(X0) = mG9(X0,X1,X2,X3,X4,X5) | zero != X5) [ennf transformation 74]
113. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG7(X0,X1,X2,X3,X4,X5) = mG8(X0,X1,X2,X3,X4) | s(X2) != X5) [ennf transformation 75]
114. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : (mG8(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4) [ennf transformation 76]
115. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0)] : ('Nil'(X0) = mG8(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4) [ennf transformation 77]
116. ! [X0 : $tType,X1 : 'list()'(X0),X2 : 'nat()',X3 : X0,X4 : 'list()'(X0),X5 : 'nat()'] : (mG7(X0,X1,X2,X3,X4,X5) = X4 | zero != X5) [ennf transformation 78]
131. ? [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) != append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) [ennf transformation 94]
132. ? [X0 : $tType,X1 : 'nat()',X2 : X0,X3 : 'list()'(X0)] : filter_mset(X0,X2,X3) != append(X0,filter_mset(X0,X2,take(X0,X1,X3)),filter_mset(X0,X2,drop(X0,X1,X3))) => filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [choice axiom]
133. filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [skolemisation 131,132]
134. mG12(X0,X1,X2,X3,X4) = iG13(X0,X1,X2,X3) | 'Cons'(X0,X1,X3) != X4 [cnf transformation 103]
135. iG13(X0,X1,X2,X3) = filter_mset(X0,X2,X3) | X1 = X2 [cnf transformation 104]
136. iG13(X0,X1,X2,X3) = 'Cons'(X0,X1,filter_mset(X0,X2,X3)) | X1 != X2 [cnf transformation 105]
137. 'Nil'(X0) = mG12(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 106]
138. 'Cons'(X0,X3,append(X0,X2,X1)) = mG11(X0,X1,X2,X3,X4) | 'Cons'(X0,X3,X2) != X4 [cnf transformation 107]
139. mG11(X0,X1,X2,X3,X4) = X1 | 'Nil'(X0) != X4 [cnf transformation 108]
140. mG9(X0,X1,X2,X3,X4,X5) = mG10(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 109]
141. mG10(X0,X1,X2,X3,X4) = 'Cons'(X0,X3,take(X0,X2,X1)) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 110]
142. 'Nil'(X0) = mG10(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 111]
143. 'Nil'(X0) = mG9(X0,X1,X2,X3,X4,X5) | zero != X5 [cnf transformation 112]
144. mG7(X0,X1,X2,X3,X4,X5) = mG8(X0,X1,X2,X3,X4) | s(X2) != X5 [cnf transformation 113]
145. mG8(X0,X1,X2,X3,X4) = drop(X0,X2,X1) | 'Cons'(X0,X3,X1) != X4 [cnf transformation 114]
146. 'Nil'(X0) = mG8(X0,X1,X2,X3,X4) | 'Nil'(X0) != X4 [cnf transformation 115]
147. mG7(X0,X1,X2,X3,X4,X5) = X4 | zero != X5 [cnf transformation 116]
162. filter_mset(sK14,sK16,sK17) != append(sK14,filter_mset(sK14,sK16,take(sK14,sK15,sK17)),filter_mset(sK14,sK16,drop(sK14,sK15,sK17))) [cnf transformation 133]
167. drop(X5,X4,X3) = mG7(X5,X0,X2,X1,X3,X4) [cnf transformation 99]
168. take(X5,X4,X3) = mG9(X5,X0,X2,X1,X3,X4) [cnf transformation 100]
169. append(X4,X3,X2) = mG11(X4,X2,X0,X1,X3) [cnf transformation 101]
170. filter_mset(X4,X3,X2) = mG12(X4,X1,X3,X0,X2) [cnf transformation 102]
171. iG13(X0,X1,X2,X3) = filter_mset(X0,X2,X4) | 'Cons'(X0,X1,X3) != X4 [definition unfolding 134,170]
172. 'Nil'(X0) = filter_mset(X0,X2,X4) | 'Nil'(X0) != X4 [definition unfolding 137,170]
173. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,X4,X1) | 'Cons'(X0,X3,X2) != X4 [definition unfolding 138,169]
174. append(X0,X4,X1) = X1 | 'Nil'(X0) != X4 [definition unfolding 139,169]
175. mG10(X0,X1,X2,X3,X4) = take(X0,X5,X4) | s(X2) != X5 [definition unfolding 140,168]
176. 'Nil'(X0) = take(X0,X5,X4) | zero != X5 [definition unfolding 143,168]
177. mG8(X0,X1,X2,X3,X4) = drop(X0,X5,X4) | s(X2) != X5 [definition unfolding 144,167]
178. drop(X0,X5,X4) = X4 | zero != X5 [definition unfolding 147,167]
187. iG13(X0,X1,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) [equality resolution 171]
188. iG13(X0,X2,X2,X3) = 'Cons'(X0,X2,filter_mset(X0,X2,X3)) [equality resolution 136]
189. 'Nil'(X0) = filter_mset(X0,X2,'Nil'(X0)) [equality resolution 172]
190. 'Cons'(X0,X3,append(X0,X2,X1)) = append(X0,'Cons'(X0,X3,X2),X1) [equality resolution 173]
191. append(X0,'Nil'(X0),X1) = X1 [equality resolution 174]
192. mG10(X0,X1,X2,X3,X4) = take(X0,s(X2),X4) [equality resolution 175]
193. 'Cons'(X0,X3,take(X0,X2,X1)) = mG10(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 141]
194. 'Nil'(X0) = mG10(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 142]
195. 'Nil'(X0) = take(X0,zero,X4) [equality resolution 176]
196. mG8(X0,X1,X2,X3,X4) = drop(X0,s(X2),X4) [equality resolution 177]
197. drop(X0,X2,X1) = mG8(X0,X1,X2,X3,'Cons'(X0,X3,X1)) [equality resolution 145]
198. 'Nil'(X0) = mG8(X0,X1,X2,X3,'Nil'(X0)) [equality resolution 146]
199. drop(X0,zero,X4) = X4 [equality resolution 178]
214. filter_mset(X0,X2,X3) = filter_mset(X0,X2,'Cons'(X0,X1,X3)) | X1 = X2 [forward demodulation 135,187]
215. 'Cons'(X0,X3,take(X0,X2,X1)) = take(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 193,192]
216. 'Nil'(X0) = take(X0,s(X2),'Nil'(X0)) [forward demodulation 194,192]
217. drop(X0,X2,X1) = drop(X0,s(X2),'Cons'(X0,X3,X1)) [forward demodulation 197,196]
218. 'Nil'(X0) = drop(X0,s(X2),'Nil'(X0)) [forward demodulation 198,196]
285. 'Cons'(X0,X1,filter_mset(X0,X1,X2)) = filter_mset(X0,X1,'Cons'(X0,X1,X2)) [superposition 188,187]
397. ! [X3 : 'list()'(sK14),X7 : 'list()'(sK14),X5 : 'nat()',X2 : sK14,X1 : 'nat()'] : ((filter_mset(sK14,sK16,X3) = append(sK14,filter_mset(sK14,sK16,take(sK14,X1,X3)),filter_mset(sK14,sK16,drop(sK14,X1,X3))) => filter_mset(sK14,sK16,'Cons'(sK14,X2,X3)) = append(sK14,filter_mset(sK14,sK16,take(sK14,s(X1),'Cons'(sK14,X2,X3))),filter_mset(sK14,sK16,drop(sK14,s(X1),'Cons'(sK14,X2,X3))))) & filter_mset(sK14,sK16,'Nil'(sK14)) = append(sK14,filter_mset(sK14,sK16,take(sK14,s(X5),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(X5),'Nil'(sK14)))) & filter_mset(sK14,sK16,X7) = append(sK14,filter_mset(sK14,sK16,take(sK14,zero,X7)),filter_mset(sK14,sK16,drop(sK14,zero,X7)))) => ! [X9 : 'list()'(sK14),X8 : 'nat()'] : filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [structural induction hypothesis (recursion)]
398. ! [X9 : 'list()'(sK14),X8 : 'nat()'] : filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) | ? [X3 : 'list()'(sK14),X7 : 'list()'(sK14),X5 : 'nat()',X2 : sK14,X1 : 'nat()'] : ((filter_mset(sK14,sK16,'Cons'(sK14,X2,X3)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(X1),'Cons'(sK14,X2,X3))),filter_mset(sK14,sK16,drop(sK14,s(X1),'Cons'(sK14,X2,X3)))) & filter_mset(sK14,sK16,X3) = append(sK14,filter_mset(sK14,sK16,take(sK14,X1,X3)),filter_mset(sK14,sK16,drop(sK14,X1,X3)))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(X5),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(X5),'Nil'(sK14)))) | filter_mset(sK14,sK16,X7) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,X7)),filter_mset(sK14,sK16,drop(sK14,zero,X7)))) [ennf transformation 397]
399. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,drop(sK14,zero,sK27))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) | filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [cnf transformation 398]
400. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,drop(sK14,zero,sK27))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) | filter_mset(sK14,sK16,X9) = append(sK14,filter_mset(sK14,sK16,take(sK14,X8,X9)),filter_mset(sK14,sK16,drop(sK14,X8,X9))) [cnf transformation 398]
403. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,drop(sK14,zero,sK27))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [induction hyperresolution 162,400]
404. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,drop(sK14,zero,sK27))) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [induction hyperresolution 162,399]
445. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 404,199]
446. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 445,195]
447. filter_mset(sK14,sK16,sK27) != append(sK14,'Nil'(sK14),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 446,189]
448. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [subsumption resolution 447,191]
449. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,'Nil'(sK14))) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 448,218]
450. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),'Nil'(sK14)) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 449,189]
451. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),'Nil'(sK14)) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 450,216]
452. 'Nil'(sK14) != append(sK14,'Nil'(sK14),'Nil'(sK14)) | filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 451,189]
453. filter_mset(sK14,sK16,sK26) = append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [subsumption resolution 452,191]
454. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,take(sK14,zero,sK27)),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 403,199]
455. filter_mset(sK14,sK16,sK27) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 454,195]
456. filter_mset(sK14,sK16,sK27) != append(sK14,'Nil'(sK14),filter_mset(sK14,sK16,sK27)) | filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 455,189]
457. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,drop(sK14,s(sK28),'Nil'(sK14)))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [subsumption resolution 456,191]
458. filter_mset(sK14,sK16,'Nil'(sK14)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),filter_mset(sK14,sK16,'Nil'(sK14))) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 457,218]
459. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK28),'Nil'(sK14))),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 458,189]
460. 'Nil'(sK14) != append(sK14,filter_mset(sK14,sK16,'Nil'(sK14)),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 459,216]
461. 'Nil'(sK14) != append(sK14,'Nil'(sK14),'Nil'(sK14)) | filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [forward demodulation 460,189]
462. filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,s(sK30),'Cons'(sK14,sK29,sK26)))) [subsumption resolution 461,191]
463. filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,take(sK14,s(sK30),'Cons'(sK14,sK29,sK26))),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 462,217]
464. filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) != append(sK14,filter_mset(sK14,sK16,'Cons'(sK14,sK29,take(sK14,sK30,sK26))),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 463,215]
767. append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) != filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) | sK16 = sK29 [superposition 464,214]
792. filter_mset(sK14,sK16,sK26) != filter_mset(sK14,sK16,'Cons'(sK14,sK29,sK26)) | sK16 = sK29 [forward demodulation 767,453]
793. sK16 = sK29 [subsumption resolution 792,214]
794. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK26)) != append(sK14,filter_mset(sK14,sK16,'Cons'(sK14,sK16,take(sK14,sK30,sK26))),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [backward demodulation 464,793]
795. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK26)) != append(sK14,'Cons'(sK14,sK16,filter_mset(sK14,sK16,take(sK14,sK30,sK26))),filter_mset(sK14,sK16,drop(sK14,sK30,sK26))) [forward demodulation 794,285]
796. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK26)) != 'Cons'(sK14,sK16,append(sK14,filter_mset(sK14,sK16,take(sK14,sK30,sK26)),filter_mset(sK14,sK16,drop(sK14,sK30,sK26)))) [forward demodulation 795,190]
797. filter_mset(sK14,sK16,'Cons'(sK14,sK16,sK26)) != 'Cons'(sK14,sK16,filter_mset(sK14,sK16,sK26)) [forward demodulation 796,453]
798. $false [subsumption resolution 797,285]
% SZS output end Proof for lemma2
% ------------------------------
% Version: Vampire 4.7 (commit )
% Linked with Z3 4.9.1.0  NOTFOUND
% Termination reason: Refutation

% Memory used [KB]: 5756
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
